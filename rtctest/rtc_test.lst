

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 14 08:04:16 2025

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F74
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F74 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  0008                     _PORTD	set	8
   118  003C                     _RC4	set	60
   119  003B                     _RC3	set	59
   120  0047                     _RD7	set	71
   121  0033                     _RB3	set	51
   122  0034                     _RB4	set	52
   123  0035                     _RB5	set	53
   124  0087                     _TRISC	set	135
   125  0088                     _TRISD	set	136
   126  0086                     _TRISB	set	134
   127  043C                     _TRISC4	set	1084
   128  0447                     _TRISD7	set	1095
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  07FA                     start_initialization:	
   134  07FA                     __initialization:	
   135                           
   136                           ; Clear objects allocated to BITBANK0
   137  07FA  1283               	bcf	3,5	;RP0=0, select bank0
   138  07FB  1303               	bcf	3,6	;RP1=0, select bank0
   139  07FC  01AC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   140  07FD                     end_of_initialization:	
   141                           ;End of C runtime variable initialization code
   142                           
   143  07FD                     __end_of__initialization:	
   144  07FD  0183               	clrf	3
   145  07FE  118A  2E40         	ljmp	_main	;jump to C main() function
   146                           
   147                           	psect	bitbssBANK0
   148  0160                     __pbitbssBANK0:	
   149  0160                     _eepromdo:	
   150  0160                     	ds	1
   151  0161                     _eepromdi:	
   152  0161                     	ds	1
   153                           
   154                           	psect	cstackCOMMON
   155  0000                     __pcstackCOMMON:	
   156  0000                     ??_delay:	
   157  0000                     ??_lcd_wait_busy:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  0000                     ??_lcd_write_com:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0000                     ??_lcd_write_com_busy:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0000                     ??_lcd_write_data:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0000                     ??_lcdreset:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0000                     ??_i2cstart:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0000                     ??_i2cstop:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0000                     ??_bitin:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0000                     ??_bitout:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0000                     ??_write:	
   185                           ; 1 bytes @ 0x0
   186                           
   187                           
   188                           	psect	cstackBANK0
   189  0020                     __pcstackBANK0:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0020                     ?_delay:	
   193  0020                     ?_lcd_wait_busy:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0020                     ?_lcd_write_com:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0020                     ?_lcd_write_com_busy:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0020                     ?_lcd_write_data:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0020                     ?_lcdreset:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0020                     ?_delay1:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0020                     ??_delay1:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0020                     ?_i2cstart:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0020                     ?_i2cstop:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0020                     ?_bitin:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0020                     ?_bitout:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0020                     ?_i2cwrite:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0020                     ??_i2cwrite:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0020                     ?_i2cread:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0020                     ??_i2cread:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0020                     ?_Read:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0020                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0020                     lcd_write_com@combuf:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0020                     lcd_write_data@databuf:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0020                     delay@t:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 2 bytes @ 0x0
   255  0020                     	ds	1
   256  0021                     lcd_write_com_busy@combuf:	
   257  0021                     delay1@k:	
   258                           ; 1 bytes @ 0x1
   259                           
   260                           
   261                           ; 1 bytes @ 0x1
   262  0021                     	ds	1
   263  0022                     ?_lcd_write_address:	
   264  0022                     lcd_write_address@y:	
   265                           ; 1 bytes @ 0x2
   266                           
   267  0022                     i2cwrite@sedata:	
   268                           ; 1 bytes @ 0x2
   269                           
   270  0022                     i2cread@m:	
   271                           ; 1 bytes @ 0x2
   272                           
   273  0022                     delay@i:	
   274                           ; 1 bytes @ 0x2
   275                           
   276                           
   277                           ; 2 bytes @ 0x2
   278  0022                     	ds	1
   279  0023                     ??_lcd_write_address:	
   280  0023                     i2cwrite@k:	
   281                           ; 1 bytes @ 0x3
   282                           
   283  0023                     i2cread@redata1:	
   284                           ; 1 bytes @ 0x3
   285                           
   286                           
   287                           ; 1 bytes @ 0x3
   288  0023                     	ds	1
   289  0024                     ?_write:	
   290  0024                     ??_Read:	
   291                           ; 1 bytes @ 0x4
   292                           
   293  0024                     lcd_write_address@x:	
   294                           ; 1 bytes @ 0x4
   295                           
   296  0024                     write@byte:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0024                     delay@j:	
   300                           ; 1 bytes @ 0x4
   301                           
   302                           
   303                           ; 2 bytes @ 0x4
   304  0024                     	ds	1
   305  0025                     ?_lcd_write_char:	
   306  0025                     lcd_write_char@y:	
   307                           ; 1 bytes @ 0x5
   308                           
   309  0025                     write@address1:	
   310                           ; 1 bytes @ 0x5
   311                           
   312  0025                     Read@address:	
   313                           ; 1 bytes @ 0x5
   314                           
   315                           
   316                           ; 1 bytes @ 0x5
   317  0025                     	ds	1
   318  0026                     lcd_write_char@buf:	
   319  0026                     Read@eebuf3:	
   320                           ; 1 bytes @ 0x6
   321                           
   322                           
   323                           ; 1 bytes @ 0x6
   324  0026                     	ds	1
   325  0027                     ??_lcd_write_char:	
   326                           
   327                           ; 1 bytes @ 0x7
   328  0027                     	ds	1
   329  0028                     lcd_write_char@x:	
   330                           
   331                           ; 1 bytes @ 0x8
   332  0028                     	ds	1
   333  0029                     ??_main:	
   334                           
   335                           ; 1 bytes @ 0x9
   336  0029                     	ds	2
   337  002B                     main@buf:	
   338                           
   339                           ; 1 bytes @ 0xB
   340  002B                     	ds	1
   341                           
   342                           	psect	maintext
   343  0640                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 14 in file "D:\microchip\rtctest\rtctest.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  buf             1   11[BANK0 ] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1
   363 ;;      Params:         0       0       0
   364 ;;      Locals:         0       1       0
   365 ;;      Temps:          0       2       0
   366 ;;      Totals:         0       3       0
   367 ;;Total ram usage:        3 bytes
   368 ;; Hardware stack levels required when called:    4
   369 ;; This function calls:
   370 ;;		_Read
   371 ;;		_delay
   372 ;;		_lcd_write_char
   373 ;;		_lcdreset
   374 ;;		_write
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           
   381                           ;psect for function _main
   382  0640                     _main:	
   383                           
   384                           ;rtctest.c: 16: unsigned char buf;
   385                           ;rtctest.c: 17: TRISB=0B11000111;
   386                           
   387                           ;incstack = 0
   388                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   389  0640  30C7               	movlw	199
   390  0641  1683               	bsf	3,5	;RP0=1, select bank1
   391  0642  1303               	bcf	3,6	;RP1=0, select bank1
   392  0643  0086               	movwf	6	;volatile
   393                           
   394                           ;rtctest.c: 18: TRISD=0B00000000;
   395  0644  0188               	clrf	8	;volatile
   396                           
   397                           ;rtctest.c: 19: TRISC=0B11100111;
   398  0645  30E7               	movlw	231
   399  0646  0087               	movwf	7	;volatile
   400                           
   401                           ;rtctest.c: 21: write(0x00,0x00);
   402  0647  1283               	bcf	3,5	;RP0=0, select bank0
   403  0648  1303               	bcf	3,6	;RP1=0, select bank0
   404  0649  01A4               	clrf	write@byte
   405  064A  3000               	movlw	0
   406  064B  118A  24BA  118A   	fcall	_write
   407                           
   408                           ;rtctest.c: 22: write(0x01,0x00);
   409  064E  1283               	bcf	3,5	;RP0=0, select bank0
   410  064F  1303               	bcf	3,6	;RP1=0, select bank0
   411  0650  01A4               	clrf	write@byte
   412  0651  3001               	movlw	1
   413  0652  118A  24BA  118A   	fcall	_write
   414                           
   415                           ;rtctest.c: 24: write(0x02,0x00);
   416  0655  1283               	bcf	3,5	;RP0=0, select bank0
   417  0656  1303               	bcf	3,6	;RP1=0, select bank0
   418  0657  01A4               	clrf	write@byte
   419  0658  3002               	movlw	2
   420  0659  118A  24BA  118A   	fcall	_write
   421                           
   422                           ;rtctest.c: 25: write(0x03,0x05);
   423  065C  3005               	movlw	5
   424  065D  1283               	bcf	3,5	;RP0=0, select bank0
   425  065E  1303               	bcf	3,6	;RP1=0, select bank0
   426  065F  00A9               	movwf	??_main
   427  0660  0829               	movf	??_main,w
   428  0661  00A4               	movwf	write@byte
   429  0662  3003               	movlw	3
   430  0663  118A  24BA  118A   	fcall	_write
   431                           
   432                           ;rtctest.c: 26: write(0x04,0x08);
   433  0666  3008               	movlw	8
   434  0667  1283               	bcf	3,5	;RP0=0, select bank0
   435  0668  1303               	bcf	3,6	;RP1=0, select bank0
   436  0669  00A9               	movwf	??_main
   437  066A  0829               	movf	??_main,w
   438  066B  00A4               	movwf	write@byte
   439  066C  3004               	movlw	4
   440  066D  118A  24BA  118A   	fcall	_write
   441                           
   442                           ;rtctest.c: 27: write(0x05,0x14);
   443  0670  3014               	movlw	20
   444  0671  1283               	bcf	3,5	;RP0=0, select bank0
   445  0672  1303               	bcf	3,6	;RP1=0, select bank0
   446  0673  00A9               	movwf	??_main
   447  0674  0829               	movf	??_main,w
   448  0675  00A4               	movwf	write@byte
   449  0676  3005               	movlw	5
   450  0677  118A  24BA  118A   	fcall	_write
   451                           
   452                           ;rtctest.c: 28: write(0x06,0x04);
   453  067A  3004               	movlw	4
   454  067B  1283               	bcf	3,5	;RP0=0, select bank0
   455  067C  1303               	bcf	3,6	;RP1=0, select bank0
   456  067D  00A9               	movwf	??_main
   457  067E  0829               	movf	??_main,w
   458  067F  00A4               	movwf	write@byte
   459  0680  3006               	movlw	6
   460  0681  118A  24BA  118A   	fcall	_write
   461                           
   462                           ;rtctest.c: 29: write(0x07,0x08);
   463  0684  3008               	movlw	8
   464  0685  1283               	bcf	3,5	;RP0=0, select bank0
   465  0686  1303               	bcf	3,6	;RP1=0, select bank0
   466  0687  00A9               	movwf	??_main
   467  0688  0829               	movf	??_main,w
   468  0689  00A4               	movwf	write@byte
   469  068A  3007               	movlw	7
   470  068B  118A  24BA  118A   	fcall	_write
   471                           
   472                           ;rtctest.c: 30: write(0x08,0x25);
   473  068E  3025               	movlw	37
   474  068F  1283               	bcf	3,5	;RP0=0, select bank0
   475  0690  1303               	bcf	3,6	;RP1=0, select bank0
   476  0691  00A9               	movwf	??_main
   477  0692  0829               	movf	??_main,w
   478  0693  00A4               	movwf	write@byte
   479  0694  3008               	movlw	8
   480  0695  118A  24BA  118A   	fcall	_write
   481                           
   482                           ;rtctest.c: 32: lcdreset();
   483  0698  118A  2605  118A   	fcall	_lcdreset
   484  069B                     l853:	
   485                           ;rtctest.c: 34: while(1)
   486                           
   487                           
   488                           ;rtctest.c: 35: {
   489                           ;rtctest.c: 36: delay(150);
   490  069B  3096               	movlw	150
   491  069C  1283               	bcf	3,5	;RP0=0, select bank0
   492  069D  1303               	bcf	3,6	;RP1=0, select bank0
   493  069E  00A0               	movwf	delay@t
   494  069F  3000               	movlw	0
   495  06A0  00A1               	movwf	delay@t+1
   496  06A1  118A  25B0  118A   	fcall	_delay
   497                           
   498                           ;rtctest.c: 37: buf=Read(0x08);
   499  06A4  3008               	movlw	8
   500  06A5  118A  258B  118A   	fcall	_Read
   501  06A8  1283               	bcf	3,5	;RP0=0, select bank0
   502  06A9  1303               	bcf	3,6	;RP1=0, select bank0
   503  06AA  00A9               	movwf	??_main
   504  06AB  0829               	movf	??_main,w
   505  06AC  00AB               	movwf	main@buf
   506                           
   507                           ;rtctest.c: 38: lcd_write_char(0,0,'2');
   508  06AD  01A5               	clrf	lcd_write_char@y
   509  06AE  3032               	movlw	50
   510  06AF  00A9               	movwf	??_main
   511  06B0  0829               	movf	??_main,w
   512  06B1  00A6               	movwf	lcd_write_char@buf
   513  06B2  3000               	movlw	0
   514  06B3  118A  24A9  118A   	fcall	_lcd_write_char
   515                           
   516                           ;rtctest.c: 39: lcd_write_char(1,0,'0');
   517  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   518  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   519  06B8  01A5               	clrf	lcd_write_char@y
   520  06B9  3030               	movlw	48
   521  06BA  00A9               	movwf	??_main
   522  06BB  0829               	movf	??_main,w
   523  06BC  00A6               	movwf	lcd_write_char@buf
   524  06BD  3001               	movlw	1
   525  06BE  118A  24A9  118A   	fcall	_lcd_write_char
   526                           
   527                           ;rtctest.c: 40: lcd_write_char(2,0,((buf>>4)&0x0f)+'0');
   528  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   529  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   530  06C3  01A5               	clrf	lcd_write_char@y
   531  06C4  082B               	movf	main@buf,w
   532  06C5  00A9               	movwf	??_main
   533  06C6  3004               	movlw	4
   534  06C7                     u395:	
   535  06C7  1003               	clrc
   536  06C8  0CA9               	rrf	??_main,f
   537  06C9  3EFF               	addlw	-1
   538  06CA  1D03               	skipz
   539  06CB  2EC7               	goto	u395
   540  06CC  0829               	movf	??_main,w
   541  06CD  390F               	andlw	15
   542  06CE  3E30               	addlw	48
   543  06CF  00AA               	movwf	??_main+1
   544  06D0  082A               	movf	??_main+1,w
   545  06D1  00A6               	movwf	lcd_write_char@buf
   546  06D2  3002               	movlw	2
   547  06D3  118A  24A9  118A   	fcall	_lcd_write_char
   548                           
   549                           ;rtctest.c: 41: lcd_write_char(3,0,(buf&0x0f)+'0');
   550  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   551  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   552  06D8  01A5               	clrf	lcd_write_char@y
   553  06D9  082B               	movf	main@buf,w
   554  06DA  390F               	andlw	15
   555  06DB  3E30               	addlw	48
   556  06DC  00A9               	movwf	??_main
   557  06DD  0829               	movf	??_main,w
   558  06DE  00A6               	movwf	lcd_write_char@buf
   559  06DF  3003               	movlw	3
   560  06E0  118A  24A9  118A   	fcall	_lcd_write_char
   561                           
   562                           ;rtctest.c: 42: lcd_write_char(4,0,'.');
   563  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   564  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   565  06E5  01A5               	clrf	lcd_write_char@y
   566  06E6  302E               	movlw	46
   567  06E7  00A9               	movwf	??_main
   568  06E8  0829               	movf	??_main,w
   569  06E9  00A6               	movwf	lcd_write_char@buf
   570  06EA  3004               	movlw	4
   571  06EB  118A  24A9  118A   	fcall	_lcd_write_char
   572                           
   573                           ;rtctest.c: 43: buf=Read(0x07);
   574  06EE  3007               	movlw	7
   575  06EF  118A  258B  118A   	fcall	_Read
   576  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   577  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   578  06F4  00A9               	movwf	??_main
   579  06F5  0829               	movf	??_main,w
   580  06F6  00AB               	movwf	main@buf
   581                           
   582                           ;rtctest.c: 44: lcd_write_char(5,0,((buf>>4)&0x01)+'0');
   583  06F7  01A5               	clrf	lcd_write_char@y
   584  06F8  082B               	movf	main@buf,w
   585  06F9  00A9               	movwf	??_main
   586  06FA  3004               	movlw	4
   587  06FB                     u405:	
   588  06FB  1003               	clrc
   589  06FC  0CA9               	rrf	??_main,f
   590  06FD  3EFF               	addlw	-1
   591  06FE  1D03               	skipz
   592  06FF  2EFB               	goto	u405
   593  0700  0829               	movf	??_main,w
   594  0701  3901               	andlw	1
   595  0702  3E30               	addlw	48
   596  0703  00AA               	movwf	??_main+1
   597  0704  082A               	movf	??_main+1,w
   598  0705  00A6               	movwf	lcd_write_char@buf
   599  0706  3005               	movlw	5
   600  0707  118A  24A9  118A   	fcall	_lcd_write_char
   601                           
   602                           ;rtctest.c: 45: lcd_write_char(6,0,(buf&0x0f)+'0');
   603  070A  1283               	bcf	3,5	;RP0=0, select bank0
   604  070B  1303               	bcf	3,6	;RP1=0, select bank0
   605  070C  01A5               	clrf	lcd_write_char@y
   606  070D  082B               	movf	main@buf,w
   607  070E  390F               	andlw	15
   608  070F  3E30               	addlw	48
   609  0710  00A9               	movwf	??_main
   610  0711  0829               	movf	??_main,w
   611  0712  00A6               	movwf	lcd_write_char@buf
   612  0713  3006               	movlw	6
   613  0714  118A  24A9  118A   	fcall	_lcd_write_char
   614                           
   615                           ;rtctest.c: 46: lcd_write_char(7,0,'.');
   616  0717  1283               	bcf	3,5	;RP0=0, select bank0
   617  0718  1303               	bcf	3,6	;RP1=0, select bank0
   618  0719  01A5               	clrf	lcd_write_char@y
   619  071A  302E               	movlw	46
   620  071B  00A9               	movwf	??_main
   621  071C  0829               	movf	??_main,w
   622  071D  00A6               	movwf	lcd_write_char@buf
   623  071E  3007               	movlw	7
   624  071F  118A  24A9  118A   	fcall	_lcd_write_char
   625                           
   626                           ;rtctest.c: 47: buf=Read(0x05);
   627  0722  3005               	movlw	5
   628  0723  118A  258B  118A   	fcall	_Read
   629  0726  1283               	bcf	3,5	;RP0=0, select bank0
   630  0727  1303               	bcf	3,6	;RP1=0, select bank0
   631  0728  00A9               	movwf	??_main
   632  0729  0829               	movf	??_main,w
   633  072A  00AB               	movwf	main@buf
   634                           
   635                           ;rtctest.c: 49: lcd_write_char(8,0,((buf>>4)&0x03)+'0');
   636  072B  01A5               	clrf	lcd_write_char@y
   637  072C  082B               	movf	main@buf,w
   638  072D  00A9               	movwf	??_main
   639  072E  3004               	movlw	4
   640  072F                     u415:	
   641  072F  1003               	clrc
   642  0730  0CA9               	rrf	??_main,f
   643  0731  3EFF               	addlw	-1
   644  0732  1D03               	skipz
   645  0733  2F2F               	goto	u415
   646  0734  0829               	movf	??_main,w
   647  0735  3903               	andlw	3
   648  0736  3E30               	addlw	48
   649  0737  00AA               	movwf	??_main+1
   650  0738  082A               	movf	??_main+1,w
   651  0739  00A6               	movwf	lcd_write_char@buf
   652  073A  3008               	movlw	8
   653  073B  118A  24A9  118A   	fcall	_lcd_write_char
   654                           
   655                           ;rtctest.c: 50: lcd_write_char(9,0,(buf&0x0f)+'0');
   656  073E  1283               	bcf	3,5	;RP0=0, select bank0
   657  073F  1303               	bcf	3,6	;RP1=0, select bank0
   658  0740  01A5               	clrf	lcd_write_char@y
   659  0741  082B               	movf	main@buf,w
   660  0742  390F               	andlw	15
   661  0743  3E30               	addlw	48
   662  0744  00A9               	movwf	??_main
   663  0745  0829               	movf	??_main,w
   664  0746  00A6               	movwf	lcd_write_char@buf
   665  0747  3009               	movlw	9
   666  0748  118A  24A9  118A   	fcall	_lcd_write_char
   667                           
   668                           ;rtctest.c: 51: buf=Read(0x04);
   669  074B  3004               	movlw	4
   670  074C  118A  258B  118A   	fcall	_Read
   671  074F  1283               	bcf	3,5	;RP0=0, select bank0
   672  0750  1303               	bcf	3,6	;RP1=0, select bank0
   673  0751  00A9               	movwf	??_main
   674  0752  0829               	movf	??_main,w
   675  0753  00AB               	movwf	main@buf
   676                           
   677                           ;rtctest.c: 52: lcd_write_char(0,1,((buf>>4)&0x03)+'0');
   678  0754  01A5               	clrf	lcd_write_char@y
   679  0755  0AA5               	incf	lcd_write_char@y,f
   680  0756  082B               	movf	main@buf,w
   681  0757  00A9               	movwf	??_main
   682  0758  3004               	movlw	4
   683  0759                     u425:	
   684  0759  1003               	clrc
   685  075A  0CA9               	rrf	??_main,f
   686  075B  3EFF               	addlw	-1
   687  075C  1D03               	skipz
   688  075D  2F59               	goto	u425
   689  075E  0829               	movf	??_main,w
   690  075F  3903               	andlw	3
   691  0760  3E30               	addlw	48
   692  0761  00AA               	movwf	??_main+1
   693  0762  082A               	movf	??_main+1,w
   694  0763  00A6               	movwf	lcd_write_char@buf
   695  0764  3000               	movlw	0
   696  0765  118A  24A9  118A   	fcall	_lcd_write_char
   697                           
   698                           ;rtctest.c: 53: lcd_write_char(1,1,(buf&0x0f)+'0');
   699  0768  1283               	bcf	3,5	;RP0=0, select bank0
   700  0769  1303               	bcf	3,6	;RP1=0, select bank0
   701  076A  01A5               	clrf	lcd_write_char@y
   702  076B  0AA5               	incf	lcd_write_char@y,f
   703  076C  082B               	movf	main@buf,w
   704  076D  390F               	andlw	15
   705  076E  3E30               	addlw	48
   706  076F  00A9               	movwf	??_main
   707  0770  0829               	movf	??_main,w
   708  0771  00A6               	movwf	lcd_write_char@buf
   709  0772  3001               	movlw	1
   710  0773  118A  24A9  118A   	fcall	_lcd_write_char
   711                           
   712                           ;rtctest.c: 54: lcd_write_char(2,1,':');
   713  0776  1283               	bcf	3,5	;RP0=0, select bank0
   714  0777  1303               	bcf	3,6	;RP1=0, select bank0
   715  0778  01A5               	clrf	lcd_write_char@y
   716  0779  0AA5               	incf	lcd_write_char@y,f
   717  077A  303A               	movlw	58
   718  077B  00A9               	movwf	??_main
   719  077C  0829               	movf	??_main,w
   720  077D  00A6               	movwf	lcd_write_char@buf
   721  077E  3002               	movlw	2
   722  077F  118A  24A9  118A   	fcall	_lcd_write_char
   723                           
   724                           ;rtctest.c: 55: buf=Read(0x03);
   725  0782  3003               	movlw	3
   726  0783  118A  258B  118A   	fcall	_Read
   727  0786  1283               	bcf	3,5	;RP0=0, select bank0
   728  0787  1303               	bcf	3,6	;RP1=0, select bank0
   729  0788  00A9               	movwf	??_main
   730  0789  0829               	movf	??_main,w
   731  078A  00AB               	movwf	main@buf
   732                           
   733                           ;rtctest.c: 56: lcd_write_char(3,1,((buf>>4)&0x0f)+'0');
   734  078B  01A5               	clrf	lcd_write_char@y
   735  078C  0AA5               	incf	lcd_write_char@y,f
   736  078D  082B               	movf	main@buf,w
   737  078E  00A9               	movwf	??_main
   738  078F  3004               	movlw	4
   739  0790                     u435:	
   740  0790  1003               	clrc
   741  0791  0CA9               	rrf	??_main,f
   742  0792  3EFF               	addlw	-1
   743  0793  1D03               	skipz
   744  0794  2F90               	goto	u435
   745  0795  0829               	movf	??_main,w
   746  0796  390F               	andlw	15
   747  0797  3E30               	addlw	48
   748  0798  00AA               	movwf	??_main+1
   749  0799  082A               	movf	??_main+1,w
   750  079A  00A6               	movwf	lcd_write_char@buf
   751  079B  3003               	movlw	3
   752  079C  118A  24A9  118A   	fcall	_lcd_write_char
   753                           
   754                           ;rtctest.c: 57: lcd_write_char(4,1,(buf&0x0f)+'0');
   755  079F  1283               	bcf	3,5	;RP0=0, select bank0
   756  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   757  07A1  01A5               	clrf	lcd_write_char@y
   758  07A2  0AA5               	incf	lcd_write_char@y,f
   759  07A3  082B               	movf	main@buf,w
   760  07A4  390F               	andlw	15
   761  07A5  3E30               	addlw	48
   762  07A6  00A9               	movwf	??_main
   763  07A7  0829               	movf	??_main,w
   764  07A8  00A6               	movwf	lcd_write_char@buf
   765  07A9  3004               	movlw	4
   766  07AA  118A  24A9  118A   	fcall	_lcd_write_char
   767                           
   768                           ;rtctest.c: 58: lcd_write_char(5,1,':');
   769  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   770  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   771  07AF  01A5               	clrf	lcd_write_char@y
   772  07B0  0AA5               	incf	lcd_write_char@y,f
   773  07B1  303A               	movlw	58
   774  07B2  00A9               	movwf	??_main
   775  07B3  0829               	movf	??_main,w
   776  07B4  00A6               	movwf	lcd_write_char@buf
   777  07B5  3005               	movlw	5
   778  07B6  118A  24A9  118A   	fcall	_lcd_write_char
   779                           
   780                           ;rtctest.c: 59: buf=Read(0x02);
   781  07B9  3002               	movlw	2
   782  07BA  118A  258B  118A   	fcall	_Read
   783  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   784  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   785  07BF  00A9               	movwf	??_main
   786  07C0  0829               	movf	??_main,w
   787  07C1  00AB               	movwf	main@buf
   788                           
   789                           ;rtctest.c: 60: lcd_write_char(6,1,((buf>>4)&0x07)+'0');
   790  07C2  01A5               	clrf	lcd_write_char@y
   791  07C3  0AA5               	incf	lcd_write_char@y,f
   792  07C4  082B               	movf	main@buf,w
   793  07C5  00A9               	movwf	??_main
   794  07C6  3004               	movlw	4
   795  07C7                     u445:	
   796  07C7  1003               	clrc
   797  07C8  0CA9               	rrf	??_main,f
   798  07C9  3EFF               	addlw	-1
   799  07CA  1D03               	skipz
   800  07CB  2FC7               	goto	u445
   801  07CC  0829               	movf	??_main,w
   802  07CD  3907               	andlw	7
   803  07CE  3E30               	addlw	48
   804  07CF  00AA               	movwf	??_main+1
   805  07D0  082A               	movf	??_main+1,w
   806  07D1  00A6               	movwf	lcd_write_char@buf
   807  07D2  3006               	movlw	6
   808  07D3  118A  24A9  118A   	fcall	_lcd_write_char
   809                           
   810                           ;rtctest.c: 61: lcd_write_char(7,1,(buf&0x0f)+'0');
   811  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   812  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   813  07D8  01A5               	clrf	lcd_write_char@y
   814  07D9  0AA5               	incf	lcd_write_char@y,f
   815  07DA  082B               	movf	main@buf,w
   816  07DB  390F               	andlw	15
   817  07DC  3E30               	addlw	48
   818  07DD  00A9               	movwf	??_main
   819  07DE  0829               	movf	??_main,w
   820  07DF  00A6               	movwf	lcd_write_char@buf
   821  07E0  3007               	movlw	7
   822  07E1  118A  24A9  118A   	fcall	_lcd_write_char
   823                           
   824                           ;rtctest.c: 63: buf=Read(0x06);
   825  07E4  3006               	movlw	6
   826  07E5  118A  258B  118A   	fcall	_Read
   827  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   828  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   829  07EA  00A9               	movwf	??_main
   830  07EB  0829               	movf	??_main,w
   831  07EC  00AB               	movwf	main@buf
   832                           
   833                           ;rtctest.c: 64: lcd_write_char(10,1,(buf&0x0f)+'0');
   834  07ED  01A5               	clrf	lcd_write_char@y
   835  07EE  0AA5               	incf	lcd_write_char@y,f
   836  07EF  082B               	movf	main@buf,w
   837  07F0  390F               	andlw	15
   838  07F1  3E30               	addlw	48
   839  07F2  00A9               	movwf	??_main
   840  07F3  0829               	movf	??_main,w
   841  07F4  00A6               	movwf	lcd_write_char@buf
   842  07F5  300A               	movlw	10
   843  07F6  118A  24A9  118A   	fcall	_lcd_write_char
   844  07F9  2E9B               	goto	l853
   845  07FA                     __end_of_main:	
   846                           
   847                           	psect	text1
   848  04BA                     __ptext1:	
   849 ;; *************** function _write *****************
   850 ;; Defined at:
   851 ;;		line 135 in file "D:\microchip\rtctest\i2c.h"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  address1        1    wreg     unsigned char 
   854 ;;  byte            1    4[BANK0 ] unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  address1        1    5[BANK0 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1
   866 ;;      Params:         0       1       0
   867 ;;      Locals:         0       1       0
   868 ;;      Temps:          0       0       0
   869 ;;      Totals:         0       2       0
   870 ;;Total ram usage:        2 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    2
   873 ;; This function calls:
   874 ;;		_i2cstart
   875 ;;		_i2cstop
   876 ;;		_i2cwrite
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _write
   884  04BA                     _write:	
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in _write: [wreg+status,2+status,0+pclath+cstack]
   888                           ;write@address1 stored from wreg
   889  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   890  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   891  04BC  00A5               	movwf	write@address1
   892                           
   893                           ;i2c.h: 137: i2cstart();
   894  04BD  118A  24D3  118A   	fcall	_i2cstart
   895                           
   896                           ;i2c.h: 138: i2cwrite(0xA2);
   897  04C0  30A2               	movlw	162
   898  04C1  118A  2544  118A   	fcall	_i2cwrite
   899                           
   900                           ;i2c.h: 139: i2cwrite(address1);
   901  04C4  1283               	bcf	3,5	;RP0=0, select bank0
   902  04C5  1303               	bcf	3,6	;RP1=0, select bank0
   903  04C6  0825               	movf	write@address1,w
   904  04C7  118A  2544  118A   	fcall	_i2cwrite
   905                           
   906                           ;i2c.h: 140: i2cwrite(byte);
   907  04CA  1283               	bcf	3,5	;RP0=0, select bank0
   908  04CB  1303               	bcf	3,6	;RP1=0, select bank0
   909  04CC  0824               	movf	write@byte,w
   910  04CD  118A  2544  118A   	fcall	_i2cwrite
   911                           
   912                           ;i2c.h: 141: i2cstop();
   913  04D0  118A  24ED         	fcall	_i2cstop
   914  04D2  0008               	return
   915  04D3                     __end_of_write:	
   916                           
   917                           	psect	text2
   918  0605                     __ptext2:	
   919 ;; *************** function _lcdreset *****************
   920 ;; Defined at:
   921 ;;		line 62 in file "D:\microchip\rtctest\lcd.h"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1
   935 ;;      Params:         0       0       0
   936 ;;      Locals:         0       0       0
   937 ;;      Temps:          0       0       0
   938 ;;      Totals:         0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    2
   942 ;; This function calls:
   943 ;;		_delay
   944 ;;		_lcd_write_com
   945 ;;		_lcd_write_com_busy
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _lcdreset
   953  0605                     _lcdreset:	
   954                           
   955                           ;lcd.h: 64: delay(150);
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _lcdreset: [wreg+status,2+status,0+pclath+cstack]
   959  0605  3096               	movlw	150
   960  0606  1283               	bcf	3,5	;RP0=0, select bank0
   961  0607  1303               	bcf	3,6	;RP1=0, select bank0
   962  0608  00A0               	movwf	delay@t
   963  0609  3000               	movlw	0
   964  060A  00A1               	movwf	delay@t+1
   965  060B  118A  25B0  118A   	fcall	_delay
   966                           
   967                           ;lcd.h: 65: lcd_write_com(0x38);
   968  060E  3038               	movlw	56
   969  060F  118A  247C  118A   	fcall	_lcd_write_com
   970                           
   971                           ;lcd.h: 66: delay(50);
   972  0612  3032               	movlw	50
   973  0613  1283               	bcf	3,5	;RP0=0, select bank0
   974  0614  1303               	bcf	3,6	;RP1=0, select bank0
   975  0615  00A0               	movwf	delay@t
   976  0616  3000               	movlw	0
   977  0617  00A1               	movwf	delay@t+1
   978  0618  118A  25B0  118A   	fcall	_delay
   979                           
   980                           ;lcd.h: 67: lcd_write_com(0x38);
   981  061B  3038               	movlw	56
   982  061C  118A  247C  118A   	fcall	_lcd_write_com
   983                           
   984                           ;lcd.h: 68: delay(50);
   985  061F  3032               	movlw	50
   986  0620  1283               	bcf	3,5	;RP0=0, select bank0
   987  0621  1303               	bcf	3,6	;RP1=0, select bank0
   988  0622  00A0               	movwf	delay@t
   989  0623  3000               	movlw	0
   990  0624  00A1               	movwf	delay@t+1
   991  0625  118A  25B0  118A   	fcall	_delay
   992                           
   993                           ;lcd.h: 69: lcd_write_com(0x38);
   994  0628  3038               	movlw	56
   995  0629  118A  247C  118A   	fcall	_lcd_write_com
   996                           
   997                           ;lcd.h: 70: lcd_write_com_busy(0x38);
   998  062C  3038               	movlw	56
   999  062D  118A  2470  118A   	fcall	_lcd_write_com_busy
  1000                           
  1001                           ;lcd.h: 71: lcd_write_com_busy(0x08);
  1002  0630  3008               	movlw	8
  1003  0631  118A  2470  118A   	fcall	_lcd_write_com_busy
  1004                           
  1005                           ;lcd.h: 72: lcd_write_com_busy(0x01);
  1006  0634  3001               	movlw	1
  1007  0635  118A  2470  118A   	fcall	_lcd_write_com_busy
  1008                           
  1009                           ;lcd.h: 73: lcd_write_com_busy(0x06);
  1010  0638  3006               	movlw	6
  1011  0639  118A  2470  118A   	fcall	_lcd_write_com_busy
  1012                           
  1013                           ;lcd.h: 74: lcd_write_com_busy(0x0c);
  1014  063C  300C               	movlw	12
  1015  063D  118A  2470         	fcall	_lcd_write_com_busy
  1016  063F  0008               	return
  1017  0640                     __end_of_lcdreset:	
  1018                           
  1019                           	psect	text3
  1020  05B0                     __ptext3:	
  1021 ;; *************** function _delay *****************
  1022 ;; Defined at:
  1023 ;;		line 5 in file "D:\microchip\rtctest\lcd.h"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  t               2    0[BANK0 ] unsigned int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  j               2    4[BANK0 ] unsigned int 
  1028 ;;  i               2    2[BANK0 ] unsigned int 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1
  1038 ;;      Params:         0       2       0
  1039 ;;      Locals:         0       4       0
  1040 ;;      Temps:          0       0       0
  1041 ;;      Totals:         0       6       0
  1042 ;;Total ram usage:        6 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_lcdreset
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _delay
  1054  05B0                     _delay:	
  1055                           
  1056                           ;lcd.h: 7: unsigned int i,j;
  1057                           ;lcd.h: 8: for(i=0;i<t;i++)
  1058                           
  1059                           ;incstack = 0
  1060                           ; Regs used in _delay: [wreg+status,2]
  1061  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1062  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1063  05B2  01A2               	clrf	delay@i
  1064  05B3  01A3               	clrf	delay@i+1
  1065  05B4                     l27:	
  1066  05B4  0821               	movf	delay@t+1,w
  1067  05B5  0223               	subwf	delay@i+1,w
  1068  05B6  1D03               	skipz
  1069  05B7  2DBA               	goto	u315
  1070  05B8  0820               	movf	delay@t,w
  1071  05B9  0222               	subwf	delay@i,w
  1072  05BA                     u315:	
  1073  05BA  1803               	btfsc	3,0
  1074  05BB  0008               	return
  1075                           
  1076                           ;lcd.h: 9: {
  1077                           ;lcd.h: 10: for(j=0;j<10;j++);
  1078  05BC  01A4               	clrf	delay@j
  1079  05BD  01A5               	clrf	delay@j+1
  1080  05BE  3000               	movlw	0
  1081  05BF  0225               	subwf	delay@j+1,w
  1082  05C0  300A               	movlw	10
  1083  05C1  1903               	skipnz
  1084  05C2  0224               	subwf	delay@j,w
  1085  05C3  1803               	btfsc	3,0
  1086  05C4  2DD2               	goto	l733
  1087  05C5                     l731:	
  1088  05C5  3001               	movlw	1
  1089  05C6  07A4               	addwf	delay@j,f
  1090  05C7  1803               	skipnc
  1091  05C8  0AA5               	incf	delay@j+1,f
  1092  05C9  3000               	movlw	0
  1093  05CA  07A5               	addwf	delay@j+1,f
  1094  05CB  3000               	movlw	0
  1095  05CC  0225               	subwf	delay@j+1,w
  1096  05CD  300A               	movlw	10
  1097  05CE  1903               	skipnz
  1098  05CF  0224               	subwf	delay@j,w
  1099  05D0  1C03               	skipc
  1100  05D1  2DC5               	goto	l731
  1101  05D2                     l733:	
  1102  05D2  3001               	movlw	1
  1103  05D3  07A2               	addwf	delay@i,f
  1104  05D4  1803               	skipnc
  1105  05D5  0AA3               	incf	delay@i+1,f
  1106  05D6  3000               	movlw	0
  1107  05D7  07A3               	addwf	delay@i+1,f
  1108  05D8  2DB4               	goto	l27
  1109  05D9                     __end_of_delay:	
  1110                           
  1111                           	psect	text4
  1112  04A9                     __ptext4:	
  1113 ;; *************** function _lcd_write_char *****************
  1114 ;; Defined at:
  1115 ;;		line 77 in file "D:\microchip\rtctest\lcd.h"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  x               1    wreg     unsigned char 
  1118 ;;  y               1    5[BANK0 ] unsigned char 
  1119 ;;  buf             1    6[BANK0 ] unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  x               1    8[BANK0 ] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1
  1131 ;;      Params:         0       2       0
  1132 ;;      Locals:         0       1       0
  1133 ;;      Temps:          0       1       0
  1134 ;;      Totals:         0       4       0
  1135 ;;Total ram usage:        4 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    3
  1138 ;; This function calls:
  1139 ;;		_lcd_write_address
  1140 ;;		_lcd_write_data
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _lcd_write_char
  1148  04A9                     _lcd_write_char:	
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  1152                           ;lcd_write_char@x stored from wreg
  1153  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1154  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1155  04AB  00A8               	movwf	lcd_write_char@x
  1156                           
  1157                           ;lcd.h: 79: lcd_write_address(x,y);
  1158  04AC  0825               	movf	lcd_write_char@y,w
  1159  04AD  00A7               	movwf	??_lcd_write_char
  1160  04AE  0827               	movf	??_lcd_write_char,w
  1161  04AF  00A2               	movwf	lcd_write_address@y
  1162  04B0  0828               	movf	lcd_write_char@x,w
  1163  04B1  118A  2508  118A   	fcall	_lcd_write_address
  1164                           
  1165                           ;lcd.h: 80: lcd_write_data(buf);
  1166  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1167  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1168  04B6  0826               	movf	lcd_write_char@buf,w
  1169  04B7  118A  2498         	fcall	_lcd_write_data
  1170  04B9  0008               	return
  1171  04BA                     __end_of_lcd_write_char:	
  1172                           
  1173                           	psect	text5
  1174  0498                     __ptext5:	
  1175 ;; *************** function _lcd_write_data *****************
  1176 ;; Defined at:
  1177 ;;		line 41 in file "D:\microchip\rtctest\lcd.h"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  databuf         1    wreg     unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  databuf         1    0[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1
  1191 ;;      Params:         0       0       0
  1192 ;;      Locals:         0       1       0
  1193 ;;      Temps:          0       0       0
  1194 ;;      Totals:         0       1       0
  1195 ;;Total ram usage:        1 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    1
  1198 ;; This function calls:
  1199 ;;		_lcd_wait_busy
  1200 ;; This function is called by:
  1201 ;;		_lcd_write_char
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _lcd_write_data
  1207  0498                     _lcd_write_data:	
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _lcd_write_data: [wreg+status,2+status,0+pclath+cstack]
  1211                           ;lcd_write_data@databuf stored from wreg
  1212  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1214  049A  00A0               	movwf	lcd_write_data@databuf
  1215                           
  1216                           ;lcd.h: 43: lcd_wait_busy();
  1217  049B  118A  2489         	fcall	_lcd_wait_busy
  1218                           
  1219                           ;lcd.h: 44: RB5=1;
  1220  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1221  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1222  049F  1686               	bsf	6,5	;volatile
  1223                           
  1224                           ;lcd.h: 45: RB4=0;
  1225  04A0  1206               	bcf	6,4	;volatile
  1226                           
  1227                           ;lcd.h: 46: PORTD=databuf;
  1228  04A1  0820               	movf	lcd_write_data@databuf,w
  1229  04A2  0088               	movwf	8	;volatile
  1230                           
  1231                           ;lcd.h: 47: RB3=1;
  1232  04A3  1586               	bsf	6,3	;volatile
  1233  04A4  0000               	nop	;# 
  1234                           
  1235                           ;lcd.h: 49: RB3=0;
  1236  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1237  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1238  04A7  1186               	bcf	6,3	;volatile
  1239  04A8  0008               	return
  1240  04A9                     __end_of_lcd_write_data:	
  1241                           
  1242                           	psect	text6
  1243  0508                     __ptext6:	
  1244 ;; *************** function _lcd_write_address *****************
  1245 ;; Defined at:
  1246 ;;		line 52 in file "D:\microchip\rtctest\lcd.h"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  x               1    wreg     unsigned char 
  1249 ;;  y               1    2[BANK0 ] unsigned char 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  x               1    4[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1
  1261 ;;      Params:         0       1       0
  1262 ;;      Locals:         0       1       0
  1263 ;;      Temps:          0       1       0
  1264 ;;      Totals:         0       3       0
  1265 ;;Total ram usage:        3 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		_lcd_write_com_busy
  1270 ;; This function is called by:
  1271 ;;		_lcd_write_char
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _lcd_write_address
  1277  0508                     _lcd_write_address:	
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in _lcd_write_address: [wreg+status,2+status,0+pclath+cstack]
  1281                           ;lcd_write_address@x stored from wreg
  1282  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1284  050A  00A4               	movwf	lcd_write_address@x
  1285                           
  1286                           ;lcd.h: 54: x&=0x0f;
  1287  050B  300F               	movlw	15
  1288  050C  00A3               	movwf	??_lcd_write_address
  1289  050D  0823               	movf	??_lcd_write_address,w
  1290  050E  05A4               	andwf	lcd_write_address@x,f
  1291                           
  1292                           ;lcd.h: 55: y&=0x01;
  1293  050F  3001               	movlw	1
  1294  0510  00A3               	movwf	??_lcd_write_address
  1295  0511  0823               	movf	??_lcd_write_address,w
  1296  0512  05A2               	andwf	lcd_write_address@y,f
  1297                           
  1298                           ;lcd.h: 56: if(y==0x00)
  1299  0513  0822               	movf	lcd_write_address@y,w
  1300  0514  1D03               	btfss	3,2
  1301  0515  2D1B               	goto	l755
  1302                           
  1303                           ;lcd.h: 57: lcd_write_com_busy(x|0x80);
  1304  0516  0824               	movf	lcd_write_address@x,w
  1305  0517  3880               	iorlw	128
  1306  0518  118A  2470         	fcall	_lcd_write_com_busy
  1307  051A  0008               	return
  1308  051B                     l755:	
  1309                           
  1310                           ;lcd.h: 58: else
  1311                           ;lcd.h: 59: lcd_write_com_busy((x+0x40)|0x80);
  1312  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1313  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1314  051D  0824               	movf	lcd_write_address@x,w
  1315  051E  3E40               	addlw	64
  1316  051F  3880               	iorlw	128
  1317  0520  118A  2470         	fcall	_lcd_write_com_busy
  1318  0522  0008               	return
  1319  0523                     __end_of_lcd_write_address:	
  1320                           
  1321                           	psect	text7
  1322  0470                     __ptext7:	
  1323 ;; *************** function _lcd_write_com_busy *****************
  1324 ;; Defined at:
  1325 ;;		line 35 in file "D:\microchip\rtctest\lcd.h"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  combuf          1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  combuf          1    1[BANK0 ] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         0       1       0
  1341 ;;      Temps:          0       0       0
  1342 ;;      Totals:         0       1       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    1
  1346 ;; This function calls:
  1347 ;;		_lcd_wait_busy
  1348 ;;		_lcd_write_com
  1349 ;; This function is called by:
  1350 ;;		_lcd_write_address
  1351 ;;		_lcdreset
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _lcd_write_com_busy
  1357  0470                     _lcd_write_com_busy:	
  1358                           
  1359                           ;incstack = 0
  1360                           ; Regs used in _lcd_write_com_busy: [wreg+status,2+status,0+pclath+cstack]
  1361                           ;lcd_write_com_busy@combuf stored from wreg
  1362  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0472  00A1               	movwf	lcd_write_com_busy@combuf
  1365                           
  1366                           ;lcd.h: 37: lcd_wait_busy();
  1367  0473  118A  2489  118A   	fcall	_lcd_wait_busy
  1368                           
  1369                           ;lcd.h: 38: lcd_write_com(combuf);
  1370  0476  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0477  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0478  0821               	movf	lcd_write_com_busy@combuf,w
  1373  0479  118A  247C         	fcall	_lcd_write_com
  1374  047B  0008               	return
  1375  047C                     __end_of_lcd_write_com_busy:	
  1376                           
  1377                           	psect	text8
  1378  047C                     __ptext8:	
  1379 ;; *************** function _lcd_write_com *****************
  1380 ;; Defined at:
  1381 ;;		line 25 in file "D:\microchip\rtctest\lcd.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  combuf          1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  combuf          1    0[BANK0 ] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1
  1395 ;;      Params:         0       0       0
  1396 ;;      Locals:         0       1       0
  1397 ;;      Temps:          0       0       0
  1398 ;;      Totals:         0       1       0
  1399 ;;Total ram usage:        1 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_lcd_write_com_busy
  1405 ;;		_lcdreset
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _lcd_write_com
  1411  047C                     _lcd_write_com:	
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _lcd_write_com: [wreg]
  1415                           ;lcd_write_com@combuf stored from wreg
  1416  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1417  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1418  047E  00A0               	movwf	lcd_write_com@combuf
  1419                           
  1420                           ;lcd.h: 27: RB5=0;
  1421  047F  1286               	bcf	6,5	;volatile
  1422                           
  1423                           ;lcd.h: 28: RB4=0;
  1424  0480  1206               	bcf	6,4	;volatile
  1425                           
  1426                           ;lcd.h: 29: PORTD=combuf;
  1427  0481  0820               	movf	lcd_write_com@combuf,w
  1428  0482  0088               	movwf	8	;volatile
  1429                           
  1430                           ;lcd.h: 30: RB3=1;
  1431  0483  1586               	bsf	6,3	;volatile
  1432  0484  0000               	nop	;# 
  1433                           
  1434                           ;lcd.h: 32: RB3=0;
  1435  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0487  1186               	bcf	6,3	;volatile
  1438  0488  0008               	return
  1439  0489                     __end_of_lcd_write_com:	
  1440                           
  1441                           	psect	text9
  1442  0489                     __ptext9:	
  1443 ;; *************** function _lcd_wait_busy *****************
  1444 ;; Defined at:
  1445 ;;		line 14 in file "D:\microchip\rtctest\lcd.h"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		None
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1
  1459 ;;      Params:         0       0       0
  1460 ;;      Locals:         0       0       0
  1461 ;;      Temps:          0       0       0
  1462 ;;      Totals:         0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_lcd_write_com_busy
  1469 ;;		_lcd_write_data
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _lcd_wait_busy
  1475  0489                     _lcd_wait_busy:	
  1476                           
  1477                           ;lcd.h: 16: TRISD7=1;
  1478                           
  1479                           ;incstack = 0
  1480                           ; Regs used in _lcd_wait_busy: []
  1481  0489  1683               	bsf	3,5	;RP0=1, select bank1
  1482  048A  1303               	bcf	3,6	;RP1=0, select bank1
  1483  048B  1788               	bsf	8,7	;volatile
  1484                           
  1485                           ;lcd.h: 17: RB5=0;
  1486  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1487  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1488  048E  1286               	bcf	6,5	;volatile
  1489                           
  1490                           ;lcd.h: 18: RB4=1;
  1491  048F  1606               	bsf	6,4	;volatile
  1492                           
  1493                           ;lcd.h: 19: RB3=1;
  1494  0490  1586               	bsf	6,3	;volatile
  1495  0491                     l35:	
  1496                           ;lcd.h: 20: while(RD7==1);
  1497                           
  1498  0491  1B88               	btfsc	8,7	;volatile
  1499  0492  2C91               	goto	l35
  1500                           
  1501                           ;lcd.h: 21: RB3=0;
  1502  0493  1186               	bcf	6,3	;volatile
  1503                           
  1504                           ;lcd.h: 22: TRISD7=0;
  1505  0494  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0495  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0496  1388               	bcf	8,7	;volatile
  1508  0497  0008               	return
  1509  0498                     __end_of_lcd_wait_busy:	
  1510                           
  1511                           	psect	text10
  1512  058B                     __ptext10:	
  1513 ;; *************** function _Read *****************
  1514 ;; Defined at:
  1515 ;;		line 144 in file "D:\microchip\rtctest\i2c.h"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  address         1    wreg     unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  address         1    5[BANK0 ] unsigned char 
  1520 ;;  eebuf3          1    6[BANK0 ] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      unsigned char 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, pclath, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1
  1530 ;;      Params:         0       0       0
  1531 ;;      Locals:         0       2       0
  1532 ;;      Temps:          0       1       0
  1533 ;;      Totals:         0       3       0
  1534 ;;Total ram usage:        3 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    2
  1537 ;; This function calls:
  1538 ;;		_i2cread
  1539 ;;		_i2cstart
  1540 ;;		_i2cstop
  1541 ;;		_i2cwrite
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _Read
  1549  058B                     _Read:	
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  1553                           ;Read@address stored from wreg
  1554  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1555  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1556  058D  00A5               	movwf	Read@address
  1557                           
  1558                           ;i2c.h: 146: unsigned char eebuf3;
  1559                           ;i2c.h: 147: i2cstart();
  1560  058E  118A  24D3  118A   	fcall	_i2cstart
  1561                           
  1562                           ;i2c.h: 148: i2cwrite(0xA2);
  1563  0591  30A2               	movlw	162
  1564  0592  118A  2544  118A   	fcall	_i2cwrite
  1565                           
  1566                           ;i2c.h: 149: i2cwrite(address);
  1567  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0597  0825               	movf	Read@address,w
  1570  0598  118A  2544  118A   	fcall	_i2cwrite
  1571                           
  1572                           ;i2c.h: 150: i2cstart();
  1573  059B  118A  24D3  118A   	fcall	_i2cstart
  1574                           
  1575                           ;i2c.h: 151: i2cwrite(0xA3);
  1576  059E  30A3               	movlw	163
  1577  059F  118A  2544  118A   	fcall	_i2cwrite
  1578                           
  1579                           ;i2c.h: 152: eebuf3=i2cread();
  1580  05A2  118A  25D9  118A   	fcall	_i2cread
  1581  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1582  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1583  05A7  00A4               	movwf	??_Read
  1584  05A8  0824               	movf	??_Read,w
  1585  05A9  00A6               	movwf	Read@eebuf3
  1586                           
  1587                           ;i2c.h: 153: i2cstop();
  1588  05AA  118A  24ED         	fcall	_i2cstop
  1589                           
  1590                           ;i2c.h: 154: return eebuf3;
  1591  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1592  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1593  05AE  0826               	movf	Read@eebuf3,w
  1594  05AF  0008               	return
  1595  05B0                     __end_of_Read:	
  1596                           
  1597                           	psect	text11
  1598  0544                     __ptext11:	
  1599 ;; *************** function _i2cwrite *****************
  1600 ;; Defined at:
  1601 ;;		line 93 in file "D:\microchip\rtctest\i2c.h"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  sedata          1    wreg     unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  sedata          1    2[BANK0 ] unsigned char 
  1606 ;;  k               1    3[BANK0 ] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1
  1616 ;;      Params:         0       0       0
  1617 ;;      Locals:         0       2       0
  1618 ;;      Temps:          0       2       0
  1619 ;;      Totals:         0       4       0
  1620 ;;Total ram usage:        4 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    1
  1623 ;; This function calls:
  1624 ;;		_bitin
  1625 ;;		_bitout
  1626 ;; This function is called by:
  1627 ;;		_write
  1628 ;;		_Read
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _i2cwrite
  1634  0544                     _i2cwrite:	
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _i2cwrite: [wreg+status,2+status,0+pclath+cstack]
  1638                           ;i2cwrite@sedata stored from wreg
  1639  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0546  00A2               	movwf	i2cwrite@sedata
  1642                           
  1643                           ;i2c.h: 95: unsigned char k;
  1644                           ;i2c.h: 96: for(k=0;k<8;k++)
  1645  0547  01A3               	clrf	i2cwrite@k
  1646  0548  3008               	movlw	8
  1647  0549  0223               	subwf	i2cwrite@k,w
  1648  054A  1803               	btfsc	3,0
  1649  054B  2D64               	goto	l789
  1650  054C                     l82:	
  1651                           
  1652                           ;i2c.h: 97: {
  1653                           ;i2c.h: 98: if(sedata&0x80)
  1654  054C  1FA2               	btfss	i2cwrite@sedata,7
  1655  054D  2D50               	goto	l84
  1656                           
  1657                           ;i2c.h: 99: {
  1658                           ;i2c.h: 100: eepromdo=1;
  1659  054E  142C               	bsf	_eepromdo/(0+8),_eepromdo& (0+7)
  1660                           
  1661                           ;i2c.h: 101: }
  1662  054F  2D51               	goto	l781
  1663  0550                     l84:	
  1664                           
  1665                           ;i2c.h: 102: else
  1666                           ;i2c.h: 103: {
  1667                           ;i2c.h: 104: eepromdo=0;
  1668  0550  102C               	bcf	_eepromdo/(0+8),_eepromdo& (0+7)
  1669  0551                     l781:	
  1670                           
  1671                           ;i2c.h: 105: }
  1672                           ;i2c.h: 106: sedata=sedata<<1;
  1673  0551  0822               	movf	i2cwrite@sedata,w
  1674  0552  00A0               	movwf	??_i2cwrite
  1675  0553  0720               	addwf	??_i2cwrite,w
  1676  0554  00A1               	movwf	??_i2cwrite+1
  1677  0555  0821               	movf	??_i2cwrite+1,w
  1678  0556  00A2               	movwf	i2cwrite@sedata
  1679                           
  1680                           ;i2c.h: 107: bitout();
  1681  0557  118A  2523  118A   	fcall	_bitout
  1682  055A  3001               	movlw	1
  1683  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1684  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1685  055D  00A0               	movwf	??_i2cwrite
  1686  055E  0820               	movf	??_i2cwrite,w
  1687  055F  07A3               	addwf	i2cwrite@k,f
  1688  0560  3008               	movlw	8
  1689  0561  0223               	subwf	i2cwrite@k,w
  1690  0562  1C03               	skipc
  1691  0563  2D4C               	goto	l82
  1692  0564                     l789:	
  1693                           
  1694                           ;i2c.h: 108: }
  1695                           ;i2c.h: 109: bitin();
  1696  0564  118A  2567         	fcall	_bitin
  1697  0566  0008               	return
  1698  0567                     __end_of_i2cwrite:	
  1699                           
  1700                           	psect	text12
  1701  04ED                     __ptext12:	
  1702 ;; *************** function _i2cstop *****************
  1703 ;; Defined at:
  1704 ;;		line 29 in file "D:\microchip\rtctest\i2c.h"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1
  1718 ;;      Params:         0       0       0
  1719 ;;      Locals:         0       0       0
  1720 ;;      Temps:          0       0       0
  1721 ;;      Totals:         0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    1
  1725 ;; This function calls:
  1726 ;;		_delay1
  1727 ;; This function is called by:
  1728 ;;		_write
  1729 ;;		_Read
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _i2cstop
  1735  04ED                     _i2cstop:	
  1736                           
  1737                           ;i2c.h: 31: RC4=0;
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _i2cstop: [wreg+status,2+status,0+pclath+cstack]
  1741  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1742  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1743  04EF  1207               	bcf	7,4	;volatile
  1744                           
  1745                           ;i2c.h: 32: RC4=0;
  1746  04F0  1207               	bcf	7,4	;volatile
  1747  04F1  0000               	nop	;# 
  1748  04F2  0000               	nop	;# 
  1749  04F3  0000               	nop	;# 
  1750  04F4  0000               	nop	;# 
  1751  04F5  0000               	nop	;# 
  1752                           
  1753                           ;i2c.h: 38: RC3=1;
  1754  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1755  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1756  04F8  1587               	bsf	7,3	;volatile
  1757                           
  1758                           ;i2c.h: 39: delay1();
  1759  04F9  118A  2464  118A   	fcall	_delay1
  1760                           
  1761                           ;i2c.h: 40: RC4=1;
  1762  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1763  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1764  04FE  1607               	bsf	7,4	;volatile
  1765                           
  1766                           ;i2c.h: 41: delay1();
  1767  04FF  118A  2464  118A   	fcall	_delay1
  1768                           
  1769                           ;i2c.h: 42: RC3=0;
  1770  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0504  1187               	bcf	7,3	;volatile
  1773                           
  1774                           ;i2c.h: 43: delay1();
  1775  0505  118A  2464         	fcall	_delay1
  1776  0507  0008               	return
  1777  0508                     __end_of_i2cstop:	
  1778                           
  1779                           	psect	text13
  1780  04D3                     __ptext13:	
  1781 ;; *************** function _i2cstart *****************
  1782 ;; Defined at:
  1783 ;;		line 13 in file "D:\microchip\rtctest\i2c.h"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1
  1797 ;;      Params:         0       0       0
  1798 ;;      Locals:         0       0       0
  1799 ;;      Temps:          0       0       0
  1800 ;;      Totals:         0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		_delay1
  1806 ;; This function is called by:
  1807 ;;		_write
  1808 ;;		_Read
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _i2cstart
  1814  04D3                     _i2cstart:	
  1815                           
  1816                           ;i2c.h: 15: RC3=1;
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _i2cstart: [wreg+status,2+status,0+pclath+cstack]
  1820  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1821  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1822  04D5  1587               	bsf	7,3	;volatile
  1823  04D6  0000               	nop	;# 
  1824  04D7  0000               	nop	;# 
  1825  04D8  0000               	nop	;# 
  1826  04D9  0000               	nop	;# 
  1827  04DA  0000               	nop	;# 
  1828                           
  1829                           ;i2c.h: 21: RC4=1;
  1830  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1831  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1832  04DD  1607               	bsf	7,4	;volatile
  1833                           
  1834                           ;i2c.h: 22: delay1();
  1835  04DE  118A  2464  118A   	fcall	_delay1
  1836                           
  1837                           ;i2c.h: 23: RC4=0;
  1838  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1839  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1840  04E3  1207               	bcf	7,4	;volatile
  1841                           
  1842                           ;i2c.h: 24: delay1();
  1843  04E4  118A  2464  118A   	fcall	_delay1
  1844                           
  1845                           ;i2c.h: 25: RC3=0;
  1846  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1847  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1848  04E9  1187               	bcf	7,3	;volatile
  1849                           
  1850                           ;i2c.h: 26: delay1();
  1851  04EA  118A  2464         	fcall	_delay1
  1852  04EC  0008               	return
  1853  04ED                     __end_of_i2cstart:	
  1854                           
  1855                           	psect	text14
  1856  0464                     __ptext14:	
  1857 ;; *************** function _delay1 *****************
  1858 ;; Defined at:
  1859 ;;		line 7 in file "D:\microchip\rtctest\i2c.h"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  k               1    1[BANK0 ] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1
  1873 ;;      Params:         0       0       0
  1874 ;;      Locals:         0       1       0
  1875 ;;      Temps:          0       1       0
  1876 ;;      Totals:         0       2       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_i2cstart
  1883 ;;		_i2cstop
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _delay1
  1889  0464                     _delay1:	
  1890                           
  1891                           ;i2c.h: 9: unsigned char k;
  1892                           ;i2c.h: 10: for(k=0;k<180;k++);
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _delay1: [wreg+status,2+status,0]
  1896  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0466  01A1               	clrf	delay1@k
  1899  0467                     L1:	
  1900  0467  30B4               	movlw	180
  1901  0468  0221               	subwf	delay1@k,w
  1902  0469  1803               	btfsc	3,0
  1903  046A  0008               	return
  1904  046B  3001               	movlw	1
  1905  046C  00A0               	movwf	??_delay1
  1906  046D  0820               	movf	??_delay1,w
  1907  046E  07A1               	addwf	delay1@k,f
  1908  046F  2C67               	goto	L1
  1909  0470                     __end_of_delay1:	
  1910                           
  1911                           	psect	text15
  1912  05D9                     __ptext15:	
  1913 ;; *************** function _i2cread *****************
  1914 ;; Defined at:
  1915 ;;		line 112 in file "D:\microchip\rtctest\i2c.h"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  redata1         1    3[BANK0 ] unsigned char 
  1920 ;;  m               1    2[BANK0 ] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      unsigned char 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1
  1930 ;;      Params:         0       0       0
  1931 ;;      Locals:         0       2       0
  1932 ;;      Temps:          0       2       0
  1933 ;;      Totals:         0       4       0
  1934 ;;Total ram usage:        4 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    1
  1937 ;; This function calls:
  1938 ;;		_bitin
  1939 ;;		_bitout
  1940 ;; This function is called by:
  1941 ;;		_Read
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _i2cread
  1947  05D9                     _i2cread:	
  1948                           
  1949                           ;i2c.h: 114: unsigned char redata1;
  1950                           ;i2c.h: 115: unsigned char m;
  1951                           ;i2c.h: 116: for(m=0;m<8;m++)
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _i2cread: [wreg+status,2+status,0+pclath+cstack]
  1955  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1956  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1957  05DB  01A2               	clrf	i2cread@m
  1958  05DC  3008               	movlw	8
  1959  05DD  0222               	subwf	i2cread@m,w
  1960  05DE  1803               	btfsc	3,0
  1961  05DF  2DFE               	goto	l90
  1962  05E0                     l797:	
  1963                           
  1964                           ;i2c.h: 117: {
  1965                           ;i2c.h: 118: redata1=redata1<<1;
  1966  05E0  0823               	movf	i2cread@redata1,w
  1967  05E1  00A0               	movwf	??_i2cread
  1968  05E2  0720               	addwf	??_i2cread,w
  1969  05E3  00A1               	movwf	??_i2cread+1
  1970  05E4  0821               	movf	??_i2cread+1,w
  1971  05E5  00A3               	movwf	i2cread@redata1
  1972                           
  1973                           ;i2c.h: 119: bitin();
  1974  05E6  118A  2567  118A   	fcall	_bitin
  1975                           
  1976                           ;i2c.h: 120: if(eepromdi==1)
  1977  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1978  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1979  05EB  1CAC               	btfss	_eepromdi/(0+8),_eepromdi& (0+7)
  1980  05EC  2DEF               	goto	l805
  1981                           
  1982                           ;i2c.h: 121: {
  1983                           ;i2c.h: 122: redata1|=0x01;
  1984  05ED  1423               	bsf	i2cread@redata1,0
  1985                           
  1986                           ;i2c.h: 123: }
  1987  05EE  2DF3               	goto	l92
  1988  05EF                     l805:	
  1989                           
  1990                           ;i2c.h: 124: else
  1991                           ;i2c.h: 125: {
  1992                           ;i2c.h: 126: redata1&=0xfe;
  1993  05EF  30FE               	movlw	254
  1994  05F0  00A0               	movwf	??_i2cread
  1995  05F1  0820               	movf	??_i2cread,w
  1996  05F2  05A3               	andwf	i2cread@redata1,f
  1997  05F3                     l92:	
  1998  05F3  0000               	nop	;# 
  1999  05F4  3001               	movlw	1
  2000  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2001  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  2002  05F7  00A0               	movwf	??_i2cread
  2003  05F8  0820               	movf	??_i2cread,w
  2004  05F9  07A2               	addwf	i2cread@m,f
  2005  05FA  3008               	movlw	8
  2006  05FB  0222               	subwf	i2cread@m,w
  2007  05FC  1C03               	skipc
  2008  05FD  2DE0               	goto	l797
  2009  05FE                     l90:	
  2010                           
  2011                           ;i2c.h: 129: }
  2012                           ;i2c.h: 130: eepromdo=1;
  2013  05FE  142C               	bsf	_eepromdo/(0+8),_eepromdo& (0+7)
  2014                           
  2015                           ;i2c.h: 131: bitout();
  2016  05FF  118A  2523         	fcall	_bitout
  2017                           
  2018                           ;i2c.h: 132: return redata1;
  2019  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0603  0823               	movf	i2cread@redata1,w
  2022  0604  0008               	return
  2023  0605                     __end_of_i2cread:	
  2024                           
  2025                           	psect	text16
  2026  0523                     __ptext16:	
  2027 ;; *************** function _bitout *****************
  2028 ;; Defined at:
  2029 ;;		line 71 in file "D:\microchip\rtctest\i2c.h"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		None
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1
  2043 ;;      Params:         0       0       0
  2044 ;;      Locals:         0       0       0
  2045 ;;      Temps:          0       0       0
  2046 ;;      Totals:         0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_i2cwrite
  2053 ;;		_i2cread
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function _bitout
  2059  0523                     _bitout:	
  2060                           
  2061                           ;i2c.h: 73: RC4=eepromdo;
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _bitout: []
  2065  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0525  1C2C               	btfss	_eepromdo/(0+8),_eepromdo& (0+7)
  2068  0526  2D2B               	goto	u270
  2069  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0529  1607               	bsf	7,4	;volatile
  2072  052A  2D2E               	goto	u284
  2073  052B                     u270:	
  2074  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2075  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2076  052D  1207               	bcf	7,4	;volatile
  2077  052E                     u284:	
  2078  052E  0000               	nop	;# 
  2079  052F  0000               	nop	;# 
  2080  0530  0000               	nop	;# 
  2081  0531  0000               	nop	;# 
  2082  0532  0000               	nop	;# 
  2083                           
  2084                           ;i2c.h: 79: RC3=1;
  2085  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0534  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0535  1587               	bsf	7,3	;volatile
  2088  0536  0000               	nop	;# 
  2089  0537  0000               	nop	;# 
  2090  0538  0000               	nop	;# 
  2091  0539  0000               	nop	;# 
  2092  053A  0000               	nop	;# 
  2093                           
  2094                           ;i2c.h: 85: RC3=0;
  2095  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2096  053C  1303               	bcf	3,6	;RP1=0, select bank0
  2097  053D  1187               	bcf	7,3	;volatile
  2098  053E  0000               	nop	;# 
  2099  053F  0000               	nop	;# 
  2100  0540  0000               	nop	;# 
  2101  0541  0000               	nop	;# 
  2102  0542  0000               	nop	;# 
  2103  0543  0008               	return
  2104  0544                     __end_of_bitout:	
  2105                           
  2106                           	psect	text17
  2107  0567                     __ptext17:	
  2108 ;; *************** function _bitin *****************
  2109 ;; Defined at:
  2110 ;;		line 46 in file "D:\microchip\rtctest\i2c.h"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		None
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1
  2124 ;;      Params:         0       0       0
  2125 ;;      Locals:         0       0       0
  2126 ;;      Temps:          0       0       0
  2127 ;;      Totals:         0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_i2cwrite
  2134 ;;		_i2cread
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _bitin
  2140  0567                     _bitin:	
  2141                           
  2142                           ;i2c.h: 48: eepromdi=1;
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _bitin: []
  2146  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0569  14AC               	bsf	_eepromdi/(0+8),_eepromdi& (0+7)
  2149                           
  2150                           ;i2c.h: 49: TRISC4=1;
  2151  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2152  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2153  056C  1607               	bsf	7,4	;volatile
  2154                           
  2155                           ;i2c.h: 50: RC3=1;
  2156  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2157  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2158  056F  1587               	bsf	7,3	;volatile
  2159  0570  0000               	nop	;# 
  2160  0571  0000               	nop	;# 
  2161  0572  0000               	nop	;# 
  2162  0573  0000               	nop	;# 
  2163  0574  0000               	nop	;# 
  2164                           
  2165                           ;i2c.h: 56: eepromdi=RC4;
  2166  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0577  10AC               	bcf	_eepromdi/(0+8),_eepromdi& (0+7)
  2169  0578  1A07               	btfsc	7,4	;volatile
  2170  0579  14AC               	bsf	_eepromdi/(0+8),_eepromdi& (0+7)
  2171  057A  0000               	nop	;# 
  2172  057B  0000               	nop	;# 
  2173  057C  0000               	nop	;# 
  2174  057D  0000               	nop	;# 
  2175  057E  0000               	nop	;# 
  2176                           
  2177                           ;i2c.h: 62: RC3=0;
  2178  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0581  1187               	bcf	7,3	;volatile
  2181  0582  0000               	nop	;# 
  2182  0583  0000               	nop	;# 
  2183  0584  0000               	nop	;# 
  2184  0585  0000               	nop	;# 
  2185  0586  0000               	nop	;# 
  2186                           
  2187                           ;i2c.h: 68: TRISC4=0;
  2188  0587  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0588  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0589  1207               	bcf	7,4	;volatile
  2191  058A  0008               	return
  2192  058B                     __end_of_bitin:	
  2193  007E                     btemp	set	126	;btemp
  2194  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     12      13
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_write_char
    _write->_i2cwrite
    _lcdreset->_delay
    _lcd_write_char->_lcd_write_address
    _lcd_write_address->_lcd_write_com_busy
    _lcd_write_com_busy->_lcd_write_com
    _Read->_i2cread
    _Read->_i2cwrite
    _i2cstop->_delay1
    _i2cstart->_delay1

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3699
                                              9 BANK0      3     3      0
                               _Read
                              _delay
                     _lcd_write_char
                           _lcdreset
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                2     1      1     614
                                              4 BANK0      2     1      1
                           _i2cstart
                            _i2cstop
                           _i2cwrite
 ---------------------------------------------------------------------------------
 (1) _lcdreset                                             0     0      0     330
                              _delay
                      _lcd_write_com
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     264
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_write_char                                       4     2      2    1877
                                              5 BANK0      4     2      2
                  _lcd_write_address
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (2) _lcd_write_data                                       1     1      0      22
                                              0 BANK0      1     1      0
                      _lcd_wait_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_address                                    3     2      1     155
                                              2 BANK0      3     2      1
                 _lcd_write_com_busy
 ---------------------------------------------------------------------------------
 (2) _lcd_write_com_busy                                   1     1      0      44
                                              1 BANK0      1     1      0
                      _lcd_wait_busy
                      _lcd_write_com
 ---------------------------------------------------------------------------------
 (3) _lcd_write_com                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_wait_busy                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read                                                 3     3      0     321
                                              4 BANK0      3     3      0
                            _i2cread
                           _i2cstart
                            _i2cstop
                           _i2cwrite
 ---------------------------------------------------------------------------------
 (2) _i2cwrite                                             4     4      0      91
                                              0 BANK0      4     4      0
                              _bitin
                             _bitout
 ---------------------------------------------------------------------------------
 (2) _i2cstop                                              0     0      0      46
                             _delay1
 ---------------------------------------------------------------------------------
 (2) _i2cstart                                             0     0      0      46
                             _delay1
 ---------------------------------------------------------------------------------
 (3) _delay1                                               2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _i2cread                                              4     4      0      93
                                              0 BANK0      4     4      0
                              _bitin
                             _bitout
 ---------------------------------------------------------------------------------
 (3) _bitout                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bitin                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read
     _i2cread
       _bitin
       _bitout
     _i2cstart
       _delay1
     _i2cstop
       _delay1
     _i2cwrite
       _bitin
       _bitout
   _delay
   _lcd_write_char
     _lcd_write_address
       _lcd_write_com_busy
         _lcd_wait_busy
         _lcd_write_com
     _lcd_write_data
       _lcd_wait_busy
   _lcdreset
     _delay
     _lcd_write_com
     _lcd_write_com_busy
       _lcd_wait_busy
       _lcd_write_com
   _write
     _i2cstart
       _delay1
     _i2cstop
       _delay1
     _i2cwrite
       _bitin
       _bitout

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            5E      0       1       4        1.1%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               5E      C       D       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            5E      0       0       6        0.0%
BANK1               5E      0       0       7        0.0%
DATA                 0      0       D       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 14 08:04:16 2025

                         l35 0491                           l27 05B4                           l90 05FE  
                         l82 054C                           l92 05F3                           l84 0550  
                        l731 05C5                          l805 05EF                          l733 05D2  
                        l755 051B                          l781 0551                          l853 069B  
                        l797 05E0                          l789 0564                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RC3 003B  
                        _RC4 003C                          _RD7 0047                          u315 05BA  
                        u405 06FB                          u270 052B                          u415 072F  
                        u425 0759                          u435 0790                          u284 052E  
                        u445 07C7                          u395 06C7               ?_lcd_wait_busy 0020  
               __CFG_FOSC$HS 0000                   Read@eebuf3 0026              lcd_write_char@x 0028  
            lcd_write_char@y 0025        lcd_write_data@databuf 0020                         _Read 058B  
     __end_of_lcd_write_char 04BA       __end_of_lcd_write_data 04A9                         _main 0640  
                       btemp 007E                __CFG_BOREN$ON 0000               ?_lcd_write_com 0020  
                       start 0000              __end_of_i2cread 0605              __end_of_i2cstop 0508  
                Read@address 0025                        ?_Read 0020                        ?_main 0020  
              __CFG_WDTE$OFF 0000               i2cread@redata1 0023                        _PORTD 0008  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _delay 05B0                        _bitin 0567                        _write 04BA  
            ?_lcd_write_char 0025              ?_lcd_write_data 0020                        status 0003  
                      wtemp0 007E   __size_of_lcd_write_address 001B              __initialization 07FA  
               __end_of_Read 05B0                 __end_of_main 07FA                       ??_Read 0024  
           __end_of_i2cstart 04ED              ??_lcd_wait_busy 0000             __end_of_i2cwrite 0567  
                     ??_main 0029                       ?_delay 0020                       ?_bitin 0020  
                     ?_write 0024              ??_lcd_write_com 0000                       _TRISC4 043C  
                     _TRISD7 0447            lcd_write_char@buf 0026                    ??_i2cread 0020  
             __CFG_PWRTE$OFF 0000                    ??_i2cstop 0000             __end_of_lcdreset 0640  
                     _delay1 0464                       _bitout 0523                       delay@i 0022  
                     delay@j 0024                       delay@t 0020     lcd_write_com_busy@combuf 0021  
    __end_of__initialization 07FD  __size_of_lcd_write_com_busy 000C               __pcstackCOMMON 0000  
              __end_of_delay 05D9                __end_of_bitin 058B                __end_of_write 04D3  
                    ??_delay 0000                      ??_bitin 0000                      ??_write 0000  
                  ?_i2cstart 0020                    ?_i2cwrite 0020                   __pmaintext 0640  
                    ?_delay1 0020                      ?_bitout 0020             ??_lcd_write_char 0027  
           ??_lcd_write_data 0000           lcd_write_address@x 0024           lcd_write_address@y 0022  
                  ?_lcdreset 0020                   ??_i2cstart 0000                   ??_i2cwrite 0020  
                    _i2cread 05D9                      _i2cstop 04ED              __size_of_delay1 000C  
            __size_of_bitout 0021                      __ptext1 04BA                      __ptext2 0605  
                    __ptext3 05B0                      __ptext4 04A9                      __ptext5 0498  
                    __ptext6 0508                      __ptext7 0470                      __ptext8 047C  
                    __ptext9 0489                      delay1@k 0021                      main@buf 002B  
       end_of_initialization 07FD                   ??_lcdreset 0000        __end_of_lcd_wait_busy 0498  
      __end_of_lcd_write_com 0489               __end_of_delay1 0470               __end_of_bitout 0544  
                  i2cwrite@k 0023                __pbitbssBANK0 0160          start_initialization 07FA  
 __end_of_lcd_write_com_busy 047C            __size_of_i2cstart 001A            __size_of_i2cwrite 0023  
                   ??_delay1 0020                     ??_bitout 0000                    ___latbits 0001  
              __pcstackBANK0 0020               i2cwrite@sedata 0022            __size_of_lcdreset 003B  
                   ?_i2cread 0020                     ?_i2cstop 0020               __size_of_delay 0029  
             __size_of_bitin 0024               __size_of_write 0019                     i2cread@m 0022  
        lcd_write_com@combuf 0020                     _i2cstart 04D3                     _i2cwrite 0544  
    __size_of_lcd_write_char 0011      __size_of_lcd_write_data 0011             __size_of_i2cread 002C  
           __size_of_i2cstop 001B                     __ptext10 058B                     __ptext11 0544  
                   __ptext12 04ED                     __ptext13 04D3                     __ptext14 0464  
                   __ptext15 05D9                     __ptext16 0523                     __ptext17 0567  
                   _eepromdi 0161                     _eepromdo 0160                     _lcdreset 0605  
              __size_of_Read 0025                __size_of_main 01BA       __size_of_lcd_wait_busy 000F  
         _lcd_write_com_busy 0470       __size_of_lcd_write_com 000D                write@address1 0025  
        ?_lcd_write_com_busy 0020         ??_lcd_write_com_busy 0000                    write@byte 0024  
          _lcd_write_address 0508           ?_lcd_write_address 0022          ??_lcd_write_address 0023  
              _lcd_wait_busy 0489               _lcd_write_char 04A9               _lcd_write_data 0498  
  __end_of_lcd_write_address 0523                _lcd_write_com 047C  
