%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$stepmotor02.obj
cinit CODE 0 7FD 7FD 3 2
text1 CODE 0 2ED 2ED A 2
text2 CODE 0 39B 39B 60 2
text3 CODE 0 34D 34D 4E 2
text4 CODE 0 2F7 2F7 10 2
text5 CODE 0 4F7 4F7 B7 2
text6 CODE 0 31E 31E 2F 2
text7 CODE 0 307 307 17 2
text8 CODE 0 469 469 8E 2
text9 CODE 0 5AE 5AE D2 2
text10 CODE 0 3FB 3FB 6E 2
maintext CODE 0 680 680 17D 2
cstackBANK0 BANK0 1 20 20 43 1
$startup.obj
end_init CODE 0 0 0 2 2
config CONFIG 0 2007 2007 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 63-7D 1
RAM A0-FD 1
BANK0 63-7D 1
BANK1 A0-FD 1
CONST 2-2EC 2
CONST 800-FFF 2
ENTRY 2-2EC 2
ENTRY 800-FFF 2
IDLOC 2000-2003 2
STACK A0-FD 1
CODE 2-2EC 2
CODE 800-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-17D 1
SFR3 180-1FD 1
STRCODE 2-2EC 2
STRCODE 800-FFF 2
STRING 2-2EC 2
STRING 800-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$stepmotor02.obj
7FD cinit CODE >290:D:\microchip\stepmotor02\stepmotor02.as
7FD cinit CODE >293:D:\microchip\stepmotor02\stepmotor02.as
7FD cinit CODE >299:D:\microchip\stepmotor02\stepmotor02.as
7FD cinit CODE >301:D:\microchip\stepmotor02\stepmotor02.as
7FE cinit CODE >302:D:\microchip\stepmotor02\stepmotor02.as
3FB text10 CODE >62:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
3FB text10 CODE >64:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
405 text10 CODE >65:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
40C text10 CODE >67:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
410 text10 CODE >68:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
418 text10 CODE >66:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
41D text10 CODE >71:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
421 text10 CODE >72:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
42B text10 CODE >73:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
433 text10 CODE >70:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
433 text10 CODE >74:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
438 text10 CODE >76:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
43A text10 CODE >77:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
442 text10 CODE >75:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
448 text10 CODE >79:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
44A text10 CODE >80:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
450 text10 CODE >81:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
452 text10 CODE >82:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
464 text10 CODE >83:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
467 text10 CODE >84:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
468 text10 CODE >86:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c
5AE text9 CODE >62:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5AE text9 CODE >67:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5BF text9 CODE >68:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5C6 text9 CODE >69:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5D5 text9 CODE >70:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5DC text9 CODE >71:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5E1 text9 CODE >72:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
5F3 text9 CODE >73:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
605 text9 CODE >74:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
609 text9 CODE >75:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
60A text9 CODE >77:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
60B text9 CODE >78:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
611 text9 CODE >79:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
617 text9 CODE >134:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
61B text9 CODE >136:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
61D text9 CODE >137:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
62B text9 CODE >138:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
633 text9 CODE >139:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
63B text9 CODE >140:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
63F text9 CODE >143:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
643 text9 CODE >145:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
645 text9 CODE >146:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
653 text9 CODE >147:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
65B text9 CODE >148:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
663 text9 CODE >149:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
667 text9 CODE >156:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c
469 text8 CODE >44:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
469 text8 CODE >49:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
47A text8 CODE >50:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
483 text8 CODE >51:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
495 text8 CODE >52:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
496 text8 CODE >53:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
49C text8 CODE >54:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4A3 text8 CODE >55:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4A5 text8 CODE >56:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4A7 text8 CODE >57:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4AC text8 CODE >58:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4B5 text8 CODE >60:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4BE text8 CODE >61:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4C5 text8 CODE >63:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4C9 text8 CODE >64:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4D2 text8 CODE >66:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4DB text8 CODE >67:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4DD text8 CODE >65:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4DD text8 CODE >68:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4E0 text8 CODE >70:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4E3 text8 CODE >71:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
4EE text8 CODE >72:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c
307 text7 CODE >28:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c
307 text7 CODE >30:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c
31E text6 CODE >206:D:\microchip\stepmotor02\main.c
31E text6 CODE >211:D:\microchip\stepmotor02\main.c
34C text6 CODE >212:D:\microchip\stepmotor02\main.c
4F7 text5 CODE >144:D:\microchip\stepmotor02\main.c
4FA text5 CODE >145:D:\microchip\stepmotor02\main.c
4FD text5 CODE >146:D:\microchip\stepmotor02\main.c
4FF text5 CODE >147:D:\microchip\stepmotor02\main.c
506 text5 CODE >148:D:\microchip\stepmotor02\main.c
50A text5 CODE >149:D:\microchip\stepmotor02\main.c
511 text5 CODE >150:D:\microchip\stepmotor02\main.c
515 text5 CODE >151:D:\microchip\stepmotor02\main.c
51C text5 CODE >152:D:\microchip\stepmotor02\main.c
520 text5 CODE >153:D:\microchip\stepmotor02\main.c
527 text5 CODE >154:D:\microchip\stepmotor02\main.c
52B text5 CODE >155:D:\microchip\stepmotor02\main.c
532 text5 CODE >156:D:\microchip\stepmotor02\main.c
536 text5 CODE >157:D:\microchip\stepmotor02\main.c
53D text5 CODE >158:D:\microchip\stepmotor02\main.c
541 text5 CODE >159:D:\microchip\stepmotor02\main.c
548 text5 CODE >160:D:\microchip\stepmotor02\main.c
54C text5 CODE >161:D:\microchip\stepmotor02\main.c
553 text5 CODE >163:D:\microchip\stepmotor02\main.c
558 text5 CODE >164:D:\microchip\stepmotor02\main.c
55A text5 CODE >165:D:\microchip\stepmotor02\main.c
561 text5 CODE >166:D:\microchip\stepmotor02\main.c
565 text5 CODE >167:D:\microchip\stepmotor02\main.c
56C text5 CODE >168:D:\microchip\stepmotor02\main.c
570 text5 CODE >169:D:\microchip\stepmotor02\main.c
577 text5 CODE >170:D:\microchip\stepmotor02\main.c
57B text5 CODE >171:D:\microchip\stepmotor02\main.c
582 text5 CODE >172:D:\microchip\stepmotor02\main.c
586 text5 CODE >173:D:\microchip\stepmotor02\main.c
58D text5 CODE >174:D:\microchip\stepmotor02\main.c
591 text5 CODE >175:D:\microchip\stepmotor02\main.c
598 text5 CODE >176:D:\microchip\stepmotor02\main.c
59C text5 CODE >177:D:\microchip\stepmotor02\main.c
5A3 text5 CODE >178:D:\microchip\stepmotor02\main.c
5A7 text5 CODE >179:D:\microchip\stepmotor02\main.c
2F7 text4 CODE >4:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
2F7 text4 CODE >6:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
2FB text4 CODE >7:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c
34D text3 CODE >55:D:\microchip\stepmotor02\stepper.c
34D text3 CODE >58:D:\microchip\stepmotor02\stepper.c
34E text3 CODE >60:D:\microchip\stepmotor02\stepper.c
352 text3 CODE >63:D:\microchip\stepmotor02\stepper.c
354 text3 CODE >66:D:\microchip\stepmotor02\stepper.c
356 text3 CODE >69:D:\microchip\stepmotor02\stepper.c
358 text3 CODE >71:D:\microchip\stepmotor02\stepper.c
359 text3 CODE >58:D:\microchip\stepmotor02\stepper.c
36E text3 CODE >72:D:\microchip\stepmotor02\stepper.c
39A text3 CODE >73:D:\microchip\stepmotor02\stepper.c
39B text2 CODE >14:D:\microchip\stepmotor02\stepper.c
39B text2 CODE >20:D:\microchip\stepmotor02\stepper.c
3AA text2 CODE >23:D:\microchip\stepmotor02\stepper.c
3BB text2 CODE >24:D:\microchip\stepmotor02\stepper.c
3C1 text2 CODE >28:D:\microchip\stepmotor02\stepper.c
3C7 text2 CODE >33:D:\microchip\stepmotor02\stepper.c
3CB text2 CODE >35:D:\microchip\stepmotor02\stepper.c
3D1 text2 CODE >36:D:\microchip\stepmotor02\stepper.c
3D6 text2 CODE >37:D:\microchip\stepmotor02\stepper.c
3D8 text2 CODE >39:D:\microchip\stepmotor02\stepper.c
3D9 text2 CODE >42:D:\microchip\stepmotor02\stepper.c
3DD text2 CODE >43:D:\microchip\stepmotor02\stepper.c
3E1 text2 CODE >44:D:\microchip\stepmotor02\stepper.c
3E1 text2 CODE >45:D:\microchip\stepmotor02\stepper.c
3E7 text2 CODE >46:D:\microchip\stepmotor02\stepper.c
3E7 text2 CODE >48:D:\microchip\stepmotor02\stepper.c
3ED text2 CODE >50:D:\microchip\stepmotor02\stepper.c
3FA text2 CODE >28:D:\microchip\stepmotor02\stepper.c
2ED text1 CODE >111:D:\microchip\stepmotor02\main.c
2ED text1 CODE >112:D:\microchip\stepmotor02\main.c
2F1 text1 CODE >113:D:\microchip\stepmotor02\main.c
2F3 text1 CODE >114:D:\microchip\stepmotor02\main.c
2F6 text1 CODE >115:D:\microchip\stepmotor02\main.c
680 maintext CODE >57:D:\microchip\stepmotor02\main.c
680 maintext CODE >59:D:\microchip\stepmotor02\main.c
683 maintext CODE >61:D:\microchip\stepmotor02\main.c
684 maintext CODE >62:D:\microchip\stepmotor02\main.c
68F maintext CODE >63:D:\microchip\stepmotor02\main.c
69E maintext CODE >64:D:\microchip\stepmotor02\main.c
6A4 maintext CODE >66:D:\microchip\stepmotor02\main.c
6B3 maintext CODE >67:D:\microchip\stepmotor02\main.c
6C0 maintext CODE >68:D:\microchip\stepmotor02\main.c
6CF maintext CODE >69:D:\microchip\stepmotor02\main.c
6DC maintext CODE >70:D:\microchip\stepmotor02\main.c
6EB maintext CODE >71:D:\microchip\stepmotor02\main.c
6F8 maintext CODE >72:D:\microchip\stepmotor02\main.c
707 maintext CODE >73:D:\microchip\stepmotor02\main.c
714 maintext CODE >74:D:\microchip\stepmotor02\main.c
723 maintext CODE >75:D:\microchip\stepmotor02\main.c
730 maintext CODE >76:D:\microchip\stepmotor02\main.c
73F maintext CODE >77:D:\microchip\stepmotor02\main.c
74C maintext CODE >78:D:\microchip\stepmotor02\main.c
75B maintext CODE >79:D:\microchip\stepmotor02\main.c
768 maintext CODE >80:D:\microchip\stepmotor02\main.c
777 maintext CODE >81:D:\microchip\stepmotor02\main.c
784 maintext CODE >82:D:\microchip\stepmotor02\main.c
793 maintext CODE >83:D:\microchip\stepmotor02\main.c
794 maintext CODE >85:D:\microchip\stepmotor02\main.c
79F maintext CODE >61:D:\microchip\stepmotor02\main.c
7A3 maintext CODE >65:D:\microchip\stepmotor02\main.c
7A5 maintext CODE >83:D:\microchip\stepmotor02\main.c
7A7 maintext CODE >86:D:\microchip\stepmotor02\main.c
7A9 maintext CODE >88:D:\microchip\stepmotor02\main.c
7AD maintext CODE >96:D:\microchip\stepmotor02\main.c
7B1 maintext CODE >94:D:\microchip\stepmotor02\main.c
7C4 maintext CODE >98:D:\microchip\stepmotor02\main.c
7CD maintext CODE >101:D:\microchip\stepmotor02\main.c
7DC maintext CODE >104:D:\microchip\stepmotor02\main.c
7E0 maintext CODE >101:D:\microchip\stepmotor02\main.c
7F3 maintext CODE >106:D:\microchip\stepmotor02\main.c
7FB maintext CODE >109:D:\microchip\stepmotor02\main.c
$startup.obj
0 end_init CODE >73:D:\microchip\stepmotor02\startup.as
0 init CODE >70:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >40:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >41:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >42:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >43:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >44:D:\microchip\stepmotor02\startup.as
0 functab ENTRY >45:D:\microchip\stepmotor02\startup.as
0 reset_vec CODE >64:D:\microchip\stepmotor02\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 1 0 ABS 0 - stepmotor02.obj
__Hspace_0 2008 0 ABS 0 - -
__Hspace_1 63 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
?_abs 20 0 BANK0 1 cstackBANK0 stepmotor02.obj
main@i 5F 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack startup.obj
_main D00 0 CODE 0 maintext stepmotor02.obj
_step 736 0 CODE 0 text2 stepmotor02.obj
abs@a 20 0 BANK0 1 cstackBANK0 stepmotor02.obj
btemp 7E 0 ABS 0 - stepmotor02.obj
start 0 0 CODE 0 init startup.obj
step@steps_to_move 52 0 BANK0 1 cstackBANK0 stepmotor02.obj
__size_of___ftmul 0 0 ABS 0 - stepmotor02.obj
__size_of___fttol 0 0 ABS 0 - stepmotor02.obj
__size_of_main 0 0 ABS 0 - stepmotor02.obj
__size_of_step 0 0 ABS 0 - stepmotor02.obj
_system_init 5DA 0 CODE 0 text1 stepmotor02.obj
__Hpowerup 0 0 CODE 0 powerup -
__size_of_ms_delay 0 0 ABS 0 - stepmotor02.obj
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - stepmotor02.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
___ftmul@f1 2C 0 BANK0 1 cstackBANK0 stepmotor02.obj
___ftmul@f2 2F 0 BANK0 1 cstackBANK0 stepmotor02.obj
step@step_number 5A 0 BANK0 1 cstackBANK0 stepmotor02.obj
___fttol@f1 3C 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Lmaintext 0 0 ABS 0 maintext -
_ms_delay 63C 0 CODE 0 text6 stepmotor02.obj
step@step_delay 54 0 BANK0 1 cstackBANK0 stepmotor02.obj
__size_of___ftpack 0 0 ABS 0 - stepmotor02.obj
__end_of___ftmul D00 0 CODE 0 text9 stepmotor02.obj
__end_of___fttol 9EE 0 CODE 0 text8 stepmotor02.obj
__end_of_ms_delay 69A 0 CODE 0 text6 stepmotor02.obj
__size_of___lwtoft 0 0 ABS 0 - stepmotor02.obj
start_initialization FFA 0 CODE 0 cinit stepmotor02.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 stepmotor02.obj
___fttol@exp1 49 0 BANK0 1 cstackBANK0 stepmotor02.obj
___fttol@lval 45 0 BANK0 1 cstackBANK0 stepmotor02.obj
___ftpack 7F6 0 CODE 0 text10 stepmotor02.obj
___ftpack@arg 20 0 BANK0 1 cstackBANK0 stepmotor02.obj
___ftpack@exp 23 0 BANK0 1 cstackBANK0 stepmotor02.obj
___int_sp 0 0 STACK 2 stack startup.obj
__end_of___ftpack 8D2 0 CODE 0 text10 stepmotor02.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 BANK2 1 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
_half_drive 9EE 0 CODE 0 text5 stepmotor02.obj
step@steps_left 58 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 0 config -
___lwtoft 60E 0 CODE 0 text7 stepmotor02.obj
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 BANK2 1 bank2 -
__Lbank3 0 0 BANK3 1 bank3 -
__Lcinit FFA 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__end_of_stepMotor 736 0 CODE 0 text3 stepmotor02.obj
__Lstack 0 0 STACK 2 stack -
__size_of_stepMotor 0 0 ABS 0 - stepmotor02.obj
__end_of___lwtoft 63C 0 CODE 0 text7 stepmotor02.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_RB0 30 0 ABS 0 - stepmotor02.obj
_RB1 31 0 ABS 0 - stepmotor02.obj
_RB3 33 0 ABS 0 - stepmotor02.obj
_RB5 35 0 ABS 0 - stepmotor02.obj
__S0 2008 0 ABS 0 - -
__S1 63 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_abs 5EE 0 CODE 0 text4 stepmotor02.obj
__end_of_system_init 5EE 0 CODE 0 text1 stepmotor02.obj
_stepMotor 69A 0 CODE 0 text3 stepmotor02.obj
__end_of_abs 60E 0 CODE 0 text4 stepmotor02.obj
__CFG_BOREN$ON 0 0 ABS 0 - stepmotor02.obj
__Lintentry 0 0 CODE 0 intentry -
__end_of_half_drive B5C 0 CODE 0 text5 stepmotor02.obj
reset_vec 0 0 CODE 0 reset_vec startup.obj
stepMotor@thisStep 4A 0 BANK0 1 cstackBANK0 stepmotor02.obj
__ptext10 7F6 0 CODE 0 text10 stepmotor02.obj
___ftmul B5C 0 CODE 0 text9 stepmotor02.obj
___fttol 8D2 0 CODE 0 text8 stepmotor02.obj
__pmaintext D00 0 CODE 0 maintext stepmotor02.obj
half_drive@direction 50 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 400E 0 CONFIG 0 config -
?___ftpack 20 0 BANK0 1 cstackBANK0 stepmotor02.obj
__CFG_CP$OFF 0 0 ABS 0 - stepmotor02.obj
__CFG_WDTE$OFF 0 0 ABS 0 - stepmotor02.obj
main@i_58 61 0 BANK0 1 cstackBANK0 stepmotor02.obj
___lwtoft@c 28 0 BANK0 1 cstackBANK0 stepmotor02.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
?___lwtoft 28 0 BANK0 1 cstackBANK0 stepmotor02.obj
ms_delay@val 4A 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
___ftmul@cntr 3A 0 BANK0 1 cstackBANK0 stepmotor02.obj
___ftmul@sign 3B 0 BANK0 1 cstackBANK0 stepmotor02.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization FFA 0 CODE 0 cinit stepmotor02.obj
__Hintentry 0 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
?___ftmul 2C 0 BANK0 1 cstackBANK0 stepmotor02.obj
?___fttol 3C 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Hreset_vec 0 0 CODE 0 reset_vec -
__size_of_system_init 0 0 ABS 0 - stepmotor02.obj
__ptext1 5DA 0 CODE 0 text1 stepmotor02.obj
__ptext2 736 0 CODE 0 text2 stepmotor02.obj
__ptext3 69A 0 CODE 0 text3 stepmotor02.obj
__ptext4 5EE 0 CODE 0 text4 stepmotor02.obj
__ptext5 9EE 0 CODE 0 text5 stepmotor02.obj
__ptext6 63C 0 CODE 0 text6 stepmotor02.obj
__ptext7 60E 0 CODE 0 text7 stepmotor02.obj
__ptext8 8D2 0 CODE 0 text8 stepmotor02.obj
__ptext9 B5C 0 CODE 0 text9 stepmotor02.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__CFG_FOSC$HS 0 0 ABS 0 - stepmotor02.obj
___ftmul@exp 36 0 BANK0 1 cstackBANK0 stepmotor02.obj
__end_of__initialization FFA 0 CODE 0 cinit stepmotor02.obj
__Lfunctab 0 0 ENTRY 0 functab -
stepMotor@dt 4C 0 BANK0 1 cstackBANK0 stepmotor02.obj
__Lclrtext 0 0 ABS 0 clrtext -
___ftpack@sign 24 0 BANK0 1 cstackBANK0 stepmotor02.obj
__size_of_half_drive 0 0 ABS 0 - stepmotor02.obj
__pcstackCOMMON 0 0 COMMON 1 cstackCOMMON stepmotor02.obj
__Hend_init 4 0 CODE 0 end_init -
__end_of_main FFA 0 CODE 0 maintext stepmotor02.obj
__end_of_step 7F6 0 CODE 0 text2 stepmotor02.obj
_PORTC 7 0 ABS 0 - stepmotor02.obj
_TRISB 86 0 ABS 0 - stepmotor02.obj
_TRISC 87 0 ABS 0 - stepmotor02.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
step@direction 56 0 BANK0 1 cstackBANK0 stepmotor02.obj
___fttol@sign1 44 0 BANK0 1 cstackBANK0 stepmotor02.obj
__size_of_abs 0 0 ABS 0 - stepmotor02.obj
__initialization FFA 0 CODE 0 cinit stepmotor02.obj
__CFG_PWRTE$OFF 0 0 ABS 0 - stepmotor02.obj
___ftmul@f3_as_product 37 0 BANK0 1 cstackBANK0 stepmotor02.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FD FFA 3 2
text1 0 2ED 5DA A 2
text2 0 39B 736 60 2
text3 0 34D 69A 4E 2
text4 0 2F7 5EE 10 2
text5 0 4F7 9EE B7 2
text6 0 31E 63C 2F 2
text7 0 307 60E 17 2
text8 0 469 8D2 8E 2
text9 0 5AE B5C D2 2
text10 0 3FB 7F6 6E 2
maintext 0 680 D00 17D 2
cstackBANK0 1 20 20 43 1
reset_vec 0 0 0 2 2
config 0 2007 400E 1 2
