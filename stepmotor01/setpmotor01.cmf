%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$setpmotor01.obj
cinit CODE 0 7FD 7FD 3 2
text1 CODE 0 729 729 5F 2
text2 CODE 0 6DA 6DA A 2
text3 CODE 0 788 788 75 2
text4 CODE 0 700 700 29 2
maintext CODE 0 6E4 6E4 1C 2
cstackBANK0 BANK0 1 20 20 7 1
$startup.obj
end_init CODE 0 0 0 2 2
config CONFIG 0 2007 2007 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 27-7D 1
RAM A0-FD 1
BANK0 27-7D 1
BANK1 A0-FD 1
CONST 2-6D9 2
CONST 800-FFF 2
ENTRY 2-6D9 2
ENTRY 800-FFF 2
IDLOC 2000-2003 2
STACK A0-FD 1
CODE 2-6D9 2
CODE 800-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-17D 1
SFR3 180-1FD 1
STRCODE 2-6D9 2
STRCODE 800-FFF 2
STRING 2-6D9 2
STRING 800-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$setpmotor01.obj
7FD cinit CODE >172:D:\microchip\stepmotor01\setpmotor01.as
7FD cinit CODE >175:D:\microchip\stepmotor01\setpmotor01.as
7FD cinit CODE >181:D:\microchip\stepmotor01\setpmotor01.as
7FD cinit CODE >183:D:\microchip\stepmotor01\setpmotor01.as
7FE cinit CODE >184:D:\microchip\stepmotor01\setpmotor01.as
700 text4 CODE >172:D:\microchip\stepmotor01\main.c
700 text4 CODE >175:D:\microchip\stepmotor01\main.c
70C text4 CODE >176:D:\microchip\stepmotor01\main.c
722 text4 CODE >175:D:\microchip\stepmotor01\main.c
788 text3 CODE >83:D:\microchip\stepmotor01\main.c
78B text3 CODE >84:D:\microchip\stepmotor01\main.c
78E text3 CODE >85:D:\microchip\stepmotor01\main.c
790 text3 CODE >86:D:\microchip\stepmotor01\main.c
797 text3 CODE >87:D:\microchip\stepmotor01\main.c
79B text3 CODE >88:D:\microchip\stepmotor01\main.c
7A2 text3 CODE >89:D:\microchip\stepmotor01\main.c
7A6 text3 CODE >90:D:\microchip\stepmotor01\main.c
7AD text3 CODE >91:D:\microchip\stepmotor01\main.c
7B1 text3 CODE >92:D:\microchip\stepmotor01\main.c
7B8 text3 CODE >93:D:\microchip\stepmotor01\main.c
7BC text3 CODE >94:D:\microchip\stepmotor01\main.c
7C3 text3 CODE >96:D:\microchip\stepmotor01\main.c
7C8 text3 CODE >97:D:\microchip\stepmotor01\main.c
7CA text3 CODE >98:D:\microchip\stepmotor01\main.c
7D1 text3 CODE >99:D:\microchip\stepmotor01\main.c
7D5 text3 CODE >100:D:\microchip\stepmotor01\main.c
7DC text3 CODE >101:D:\microchip\stepmotor01\main.c
7E0 text3 CODE >102:D:\microchip\stepmotor01\main.c
7E7 text3 CODE >103:D:\microchip\stepmotor01\main.c
7EB text3 CODE >104:D:\microchip\stepmotor01\main.c
7F2 text3 CODE >105:D:\microchip\stepmotor01\main.c
7F6 text3 CODE >106:D:\microchip\stepmotor01\main.c
6DA text2 CODE >77:D:\microchip\stepmotor01\main.c
6DA text2 CODE >78:D:\microchip\stepmotor01\main.c
6DE text2 CODE >79:D:\microchip\stepmotor01\main.c
6E0 text2 CODE >80:D:\microchip\stepmotor01\main.c
6E3 text2 CODE >81:D:\microchip\stepmotor01\main.c
729 text1 CODE >149:D:\microchip\stepmotor01\main.c
72C text1 CODE >150:D:\microchip\stepmotor01\main.c
72F text1 CODE >151:D:\microchip\stepmotor01\main.c
731 text1 CODE >152:D:\microchip\stepmotor01\main.c
738 text1 CODE >153:D:\microchip\stepmotor01\main.c
73C text1 CODE >154:D:\microchip\stepmotor01\main.c
743 text1 CODE >155:D:\microchip\stepmotor01\main.c
747 text1 CODE >156:D:\microchip\stepmotor01\main.c
74E text1 CODE >157:D:\microchip\stepmotor01\main.c
752 text1 CODE >158:D:\microchip\stepmotor01\main.c
759 text1 CODE >160:D:\microchip\stepmotor01\main.c
75E text1 CODE >161:D:\microchip\stepmotor01\main.c
760 text1 CODE >162:D:\microchip\stepmotor01\main.c
767 text1 CODE >163:D:\microchip\stepmotor01\main.c
76B text1 CODE >164:D:\microchip\stepmotor01\main.c
772 text1 CODE >165:D:\microchip\stepmotor01\main.c
776 text1 CODE >166:D:\microchip\stepmotor01\main.c
77D text1 CODE >167:D:\microchip\stepmotor01\main.c
781 text1 CODE >168:D:\microchip\stepmotor01\main.c
6E4 maintext CODE >53:D:\microchip\stepmotor01\main.c
6E4 maintext CODE >55:D:\microchip\stepmotor01\main.c
6E7 maintext CODE >56:D:\microchip\stepmotor01\main.c
6ED maintext CODE >60:D:\microchip\stepmotor01\main.c
6F1 maintext CODE >63:D:\microchip\stepmotor01\main.c
6F2 maintext CODE >64:D:\microchip\stepmotor01\main.c
6F6 maintext CODE >67:D:\microchip\stepmotor01\main.c
6FA maintext CODE >71:D:\microchip\stepmotor01\main.c
6FB maintext CODE >73:D:\microchip\stepmotor01\main.c
6FE maintext CODE >75:D:\microchip\stepmotor01\main.c
$startup.obj
0 end_init CODE >73:D:\microchip\stepmotor01\startup.as
0 init CODE >70:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >40:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >41:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >42:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >43:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >44:D:\microchip\stepmotor01\startup.as
0 functab ENTRY >45:D:\microchip\stepmotor01\startup.as
0 reset_vec CODE >64:D:\microchip\stepmotor01\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 1 0 ABS 0 - setpmotor01.obj
__Hspace_0 2008 0 ABS 0 - -
__Hspace_1 27 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__size_of_wave_drive 0 0 ABS 0 - setpmotor01.obj
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack startup.obj
_main DC8 0 CODE 0 maintext setpmotor01.obj
btemp 7E 0 ABS 0 - setpmotor01.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - setpmotor01.obj
_system_init DB4 0 CODE 0 text2 setpmotor01.obj
__Hpowerup 0 0 CODE 0 powerup -
__size_of_ms_delay 0 0 ABS 0 - setpmotor01.obj
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - setpmotor01.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Lmaintext 0 0 ABS 0 maintext -
_ms_delay E00 0 CODE 0 text4 setpmotor01.obj
__end_of_ms_delay E52 0 CODE 0 text4 setpmotor01.obj
full_drive@direction 26 0 BANK0 1 cstackBANK0 setpmotor01.obj
_full_drive F10 0 CODE 0 text3 setpmotor01.obj
wave_drive@direction 26 0 BANK0 1 cstackBANK0 setpmotor01.obj
start_initialization FFA 0 CODE 0 cinit setpmotor01.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 setpmotor01.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 BANK2 1 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 0 config -
__end_of_full_drive FFA 0 CODE 0 text3 setpmotor01.obj
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 BANK2 1 bank2 -
__Lbank3 0 0 BANK3 1 bank3 -
__Lcinit FFA 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_RB0 30 0 ABS 0 - setpmotor01.obj
_RB1 31 0 ABS 0 - setpmotor01.obj
_RB3 33 0 ABS 0 - setpmotor01.obj
_RB5 35 0 ABS 0 - setpmotor01.obj
__S0 2008 0 ABS 0 - -
__S1 27 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__end_of_system_init DC8 0 CODE 0 text2 setpmotor01.obj
__CFG_BOREN$ON 0 0 ABS 0 - setpmotor01.obj
__Lintentry 0 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
_wave_drive E52 0 CODE 0 text1 setpmotor01.obj
__pmaintext DC8 0 CODE 0 maintext setpmotor01.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 400E 0 CONFIG 0 config -
__CFG_CP$OFF 0 0 ABS 0 - setpmotor01.obj
__CFG_WDTE$OFF 0 0 ABS 0 - setpmotor01.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
ms_delay@val 20 0 BANK0 1 cstackBANK0 setpmotor01.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__end_of_wave_drive F10 0 CODE 0 text1 setpmotor01.obj
end_of_initialization FFA 0 CODE 0 cinit setpmotor01.obj
__Hintentry 0 0 CODE 0 intentry -
__size_of_full_drive 0 0 ABS 0 - setpmotor01.obj
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
__size_of_system_init 0 0 ABS 0 - setpmotor01.obj
__ptext1 E52 0 CODE 0 text1 setpmotor01.obj
__ptext2 DB4 0 CODE 0 text2 setpmotor01.obj
__ptext3 F10 0 CODE 0 text3 setpmotor01.obj
__ptext4 E00 0 CODE 0 text4 setpmotor01.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__CFG_FOSC$HS 0 0 ABS 0 - setpmotor01.obj
__end_of__initialization FFA 0 CODE 0 cinit setpmotor01.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 0 0 COMMON 1 cstackCOMMON setpmotor01.obj
__Hend_init 4 0 CODE 0 end_init -
__end_of_main E00 0 CODE 0 maintext setpmotor01.obj
_PORTB 6 0 ABS 0 - setpmotor01.obj
_PORTC 7 0 ABS 0 - setpmotor01.obj
_TRISB 86 0 ABS 0 - setpmotor01.obj
_TRISC 87 0 ABS 0 - setpmotor01.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
ms_delay@i 22 0 BANK0 1 cstackBANK0 setpmotor01.obj
ms_delay@j 24 0 BANK0 1 cstackBANK0 setpmotor01.obj
__initialization FFA 0 CODE 0 cinit setpmotor01.obj
__CFG_PWRTE$OFF 0 0 ABS 0 - setpmotor01.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FD FFA 3 2
text1 0 729 E52 5F 2
text2 0 6DA DB4 A 2
text3 0 788 F10 75 2
text4 0 700 E00 29 2
maintext 0 6E4 DC8 1C 2
cstackBANK0 1 20 20 7 1
reset_vec 0 0 0 2 2
config 0 2007 400E 1 2
