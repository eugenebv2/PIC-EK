%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$4x7seg_test.obj
cinit CODE 0 7FD 7FD 3 2
text1 CODE 0 6EC 6EC 34 2
text2 CODE 0 720 720 3E 2
maintext CODE 0 75E 75E 9F 2
cstackBANK0 BANK0 1 20 20 16 1
strings STRING 0 2 2 10 2
$startup.obj
end_init CODE 0 0 0 2 2
config CONFIG 0 2007 2007 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 36-7D 1
RAM A0-FD 1
BANK0 36-7D 1
BANK1 A0-FD 1
CONST 12-6EB 2
CONST 800-FFF 2
ENTRY 12-6EB 2
ENTRY 800-FFF 2
IDLOC 2000-2003 2
STACK A0-FD 1
CODE 12-6EB 2
CODE 800-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-17D 1
SFR3 180-1FD 1
STRCODE 12-6EB 2
STRCODE 800-FFF 2
STRING 12-6EB 2
STRING 800-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$4x7seg_test.obj
7FD cinit CODE >203:D:\microchip\4x7segtest\4x7seg_test.as
7FD cinit CODE >206:D:\microchip\4x7segtest\4x7seg_test.as
7FD cinit CODE >212:D:\microchip\4x7segtest\4x7seg_test.as
7FD cinit CODE >214:D:\microchip\4x7segtest\4x7seg_test.as
7FE cinit CODE >215:D:\microchip\4x7segtest\4x7seg_test.as
720 text2 CODE >6:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
720 text2 CODE >14:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
724 text2 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
728 text2 CODE >16:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
72A text2 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
72C text2 CODE >18:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
733 text2 CODE >19:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
737 text2 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
738 text2 CODE >22:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
73F text2 CODE >23:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
747 text2 CODE >24:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
74D text2 CODE >25:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
74E text2 CODE >27:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
755 text2 CODE >28:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
759 text2 CODE >30:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
6EC text1 CODE >6:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
6EC text1 CODE >13:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
6F2 text1 CODE >14:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
6F4 text1 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
6F6 text1 CODE >16:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
6FD text1 CODE >17:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
701 text1 CODE >15:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
702 text1 CODE >20:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
70A text1 CODE >21:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
710 text1 CODE >22:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
717 text1 CODE >23:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
71B text1 CODE >25:C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
75E maintext CODE >26:D:\microchip\4x7segtest\4x7seg_test.as
75E maintext CODE >26:D:\microchip\4x7segtest\4x7segtest.c
75E maintext CODE >31:D:\microchip\4x7segtest\4x7segtest.c
762 maintext CODE >32:D:\microchip\4x7segtest\4x7segtest.c
764 maintext CODE >33:D:\microchip\4x7segtest\4x7segtest.c
768 maintext CODE >34:D:\microchip\4x7segtest\4x7segtest.c
76A maintext CODE >35:D:\microchip\4x7segtest\4x7segtest.c
76B maintext CODE >36:D:\microchip\4x7segtest\4x7segtest.c
76E maintext CODE >37:D:\microchip\4x7segtest\4x7segtest.c
76F maintext CODE >61:D:\microchip\4x7segtest\4x7segtest.c
770 maintext CODE >64:D:\microchip\4x7segtest\4x7segtest.c
778 maintext CODE >67:D:\microchip\4x7segtest\4x7segtest.c
784 maintext CODE >70:D:\microchip\4x7segtest\4x7segtest.c
7A0 maintext CODE >73:D:\microchip\4x7segtest\4x7segtest.c
7B4 maintext CODE >40:D:\microchip\4x7segtest\4x7segtest.c
7B6 maintext CODE >42:D:\microchip\4x7segtest\4x7segtest.c
7B8 maintext CODE >44:D:\microchip\4x7segtest\4x7segtest.c
7BA maintext CODE >46:D:\microchip\4x7segtest\4x7segtest.c
7BE maintext CODE >48:D:\microchip\4x7segtest\4x7segtest.c
7C2 maintext CODE >50:D:\microchip\4x7segtest\4x7segtest.c
7CA maintext CODE >52:D:\microchip\4x7segtest\4x7segtest.c
7CB maintext CODE >53:D:\microchip\4x7segtest\4x7segtest.c
7D3 maintext CODE >55:D:\microchip\4x7segtest\4x7segtest.c
7D4 maintext CODE >56:D:\microchip\4x7segtest\4x7segtest.c
7E3 maintext CODE >57:D:\microchip\4x7segtest\4x7segtest.c
7E3 maintext CODE >58:D:\microchip\4x7segtest\4x7segtest.c
7E4 maintext CODE >59:D:\microchip\4x7segtest\4x7segtest.c
7EC maintext CODE >60:D:\microchip\4x7segtest\4x7segtest.c
7EE maintext CODE >61:D:\microchip\4x7segtest\4x7segtest.c
7FC maintext CODE >38:D:\microchip\4x7segtest\4x7segtest.c
$startup.obj
0 end_init CODE >73:D:\microchip\4x7segtest\startup.as
0 init CODE >70:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >40:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >41:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >42:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >43:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >44:D:\microchip\4x7segtest\startup.as
0 functab ENTRY >45:D:\microchip\4x7segtest\startup.as
0 reset_vec CODE >64:D:\microchip\4x7segtest\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 1 0 ABS 0 - 4x7seg_test.obj
___lwmod@counter 25 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__Hspace_0 2008 0 ABS 0 - -
__Hspace_1 36 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
main@a 2F 0 BANK0 1 cstackBANK0 4x7seg_test.obj
main@b 33 0 BANK0 1 cstackBANK0 4x7seg_test.obj
main@c 30 0 BANK0 1 cstackBANK0 4x7seg_test.obj
main@d 34 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__Hstrings 0 0 ABS 0 strings -
_RBIE 5B 0 ABS 0 - 4x7seg_test.obj
___sp 0 0 STACK 2 stack startup.obj
_main EBC 0 CODE 0 maintext 4x7seg_test.obj
btemp 7E 0 ABS 0 - 4x7seg_test.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - 4x7seg_test.obj
__size_of___lwdiv 0 0 ABS 0 - 4x7seg_test.obj
__size_of___lwmod 0 0 ABS 0 - 4x7seg_test.obj
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - 4x7seg_test.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Lmaintext 0 0 ABS 0 maintext -
___lwmod@divisor 20 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__end_of___lwdiv EBC 0 CODE 0 text2 4x7seg_test.obj
__end_of___lwmod E40 0 CODE 0 text1 4x7seg_test.obj
___lwdiv@quotient 2B 0 BANK0 1 cstackBANK0 4x7seg_test.obj
___lwmod@dividend 22 0 BANK0 1 cstackBANK0 4x7seg_test.obj
start_initialization FFA 0 CODE 0 cinit 4x7seg_test.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 4x7seg_test.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 BANK2 1 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__stringbase E 0 STRING 0 strings 4x7seg_test.obj
___lwdiv@counter 2D 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 BANK2 1 bank2 -
__Lbank3 0 0 BANK3 1 bank3 -
__Lcinit FFA 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
_LED 10 0 STRING 0 strings 4x7seg_test.obj
_RC0 38 0 ABS 0 - 4x7seg_test.obj
_RC1 39 0 ABS 0 - 4x7seg_test.obj
__S0 2008 0 ABS 0 - -
__S1 36 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__end_of_LED 24 0 STRING 0 strings 4x7seg_test.obj
__CFG_BOREN$ON 0 0 ABS 0 - 4x7seg_test.obj
__Lintentry 0 0 CODE 0 intentry -
__stringtab 4 0 STRING 0 strings 4x7seg_test.obj
reset_vec 0 0 CODE 0 reset_vec startup.obj
___lwdiv E40 0 CODE 0 text2 4x7seg_test.obj
___lwmod DD8 0 CODE 0 text1 4x7seg_test.obj
__pmaintext EBC 0 CODE 0 maintext 4x7seg_test.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 400E 0 CONFIG 0 config -
__CFG_WDTE$OFF 0 0 ABS 0 - 4x7seg_test.obj
___lwdiv@divisor 26 0 BANK0 1 cstackBANK0 4x7seg_test.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__end_of__stringtab 10 0 STRING 0 strings 4x7seg_test.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
main@go 31 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 0 0 CODE 0 end_init -
end_of_initialization FFA 0 CODE 0 cinit 4x7seg_test.obj
__Hintentry 0 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
___lwdiv@dividend 28 0 BANK0 1 cstackBANK0 4x7seg_test.obj
?___lwdiv 26 0 BANK0 1 cstackBANK0 4x7seg_test.obj
?___lwmod 20 0 BANK0 1 cstackBANK0 4x7seg_test.obj
__Hreset_vec 0 0 CODE 0 reset_vec -
__ptext1 DD8 0 CODE 0 text1 4x7seg_test.obj
__ptext2 E40 0 CODE 0 text2 4x7seg_test.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__CFG_FOSC$HS 0 0 ABS 0 - 4x7seg_test.obj
__end_of__initialization FFA 0 CODE 0 cinit 4x7seg_test.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__Hend_init 4 0 CODE 0 end_init -
__end_of_main FFA 0 CODE 0 maintext 4x7seg_test.obj
_PORTB 6 0 ABS 0 - 4x7seg_test.obj
_PORTD 8 0 ABS 0 - 4x7seg_test.obj
_TRISB 86 0 ABS 0 - 4x7seg_test.obj
_TRISC 87 0 ABS 0 - 4x7seg_test.obj
_TRISD 88 0 ABS 0 - 4x7seg_test.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
__initialization FFA 0 CODE 0 cinit 4x7seg_test.obj
__CFG_PWRTE$OFF 0 0 ABS 0 - 4x7seg_test.obj
__pstrings 4 0 STRING 0 strings 4x7seg_test.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FD FFA 3 2
text1 0 6EC DD8 34 2
text2 0 720 E40 3E 2
maintext 0 75E EBC 9F 2
cstackBANK0 1 20 20 16 1
reset_vec 0 0 0 2 2
strings 0 2 4 10 2
config 0 2007 400E 1 2
