%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$4x4w7segs.obj
cinit CODE 0 7F6 7F6 A 2
text1 CODE 0 76E 76E 88 2
maintext CODE 0 759 759 15 2
cstackBANK0 BANK0 1 20 20 4 1
idataBANK0 CODE 0 757 757 2 2
strings STRING 0 2 2 1C 2
dataBANK0 BANK0 1 24 24 2 1
$startup.obj
end_init CODE 0 0 0 2 2
config CONFIG 0 2007 2007 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 26-7D 1
RAM A0-FD 1
BANK0 26-7D 1
BANK1 A0-FD 1
CONST 1E-756 2
CONST 800-FFF 2
ENTRY 1E-756 2
ENTRY 800-FFF 2
IDLOC 2000-2003 2
STACK A0-FD 1
CODE 1E-756 2
CODE 800-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-17D 1
SFR3 180-1FD 1
STRCODE 1E-756 2
STRCODE 800-FFF 2
STRING 1E-756 2
STRING 800-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$4x4w7segs.obj
7F6 cinit CODE >227:D:\microchip\4x4w7segs\4x4w7segs.as
7F6 cinit CODE >230:D:\microchip\4x4w7segs\4x4w7segs.as
7F6 cinit CODE >244:D:\microchip\4x4w7segs\4x4w7segs.as
7F9 cinit CODE >245:D:\microchip\4x4w7segs\4x4w7segs.as
7FA cinit CODE >246:D:\microchip\4x4w7segs\4x4w7segs.as
7FC cinit CODE >247:D:\microchip\4x4w7segs\4x4w7segs.as
7FD cinit CODE >253:D:\microchip\4x4w7segs\4x4w7segs.as
7FD cinit CODE >255:D:\microchip\4x4w7segs\4x4w7segs.as
7FE cinit CODE >256:D:\microchip\4x4w7segs\4x4w7segs.as
76E text1 CODE >47:D:\microchip\4x4w7segs\main.c
76E text1 CODE >49:D:\microchip\4x4w7segs\main.c
771 text1 CODE >50:D:\microchip\4x4w7segs\main.c
772 text1 CODE >51:D:\microchip\4x4w7segs\main.c
773 text1 CODE >52:D:\microchip\4x4w7segs\main.c
774 text1 CODE >53:D:\microchip\4x4w7segs\main.c
775 text1 CODE >54:D:\microchip\4x4w7segs\main.c
776 text1 CODE >55:D:\microchip\4x4w7segs\main.c
777 text1 CODE >56:D:\microchip\4x4w7segs\main.c
778 text1 CODE >57:D:\microchip\4x4w7segs\main.c
77C text1 CODE >59:D:\microchip\4x4w7segs\main.c
77E text1 CODE >61:D:\microchip\4x4w7segs\main.c
780 text1 CODE >63:D:\microchip\4x4w7segs\main.c
782 text1 CODE >65:D:\microchip\4x4w7segs\main.c
784 text1 CODE >67:D:\microchip\4x4w7segs\main.c
786 text1 CODE >69:D:\microchip\4x4w7segs\main.c
788 text1 CODE >71:D:\microchip\4x4w7segs\main.c
78A text1 CODE >73:D:\microchip\4x4w7segs\main.c
78B text1 CODE >74:D:\microchip\4x4w7segs\main.c
78C text1 CODE >75:D:\microchip\4x4w7segs\main.c
78D text1 CODE >76:D:\microchip\4x4w7segs\main.c
78E text1 CODE >77:D:\microchip\4x4w7segs\main.c
78F text1 CODE >78:D:\microchip\4x4w7segs\main.c
790 text1 CODE >79:D:\microchip\4x4w7segs\main.c
791 text1 CODE >80:D:\microchip\4x4w7segs\main.c
792 text1 CODE >81:D:\microchip\4x4w7segs\main.c
796 text1 CODE >83:D:\microchip\4x4w7segs\main.c
798 text1 CODE >85:D:\microchip\4x4w7segs\main.c
79A text1 CODE >87:D:\microchip\4x4w7segs\main.c
79C text1 CODE >89:D:\microchip\4x4w7segs\main.c
79E text1 CODE >91:D:\microchip\4x4w7segs\main.c
7A0 text1 CODE >93:D:\microchip\4x4w7segs\main.c
7A2 text1 CODE >95:D:\microchip\4x4w7segs\main.c
7A4 text1 CODE >97:D:\microchip\4x4w7segs\main.c
7A5 text1 CODE >98:D:\microchip\4x4w7segs\main.c
7A6 text1 CODE >99:D:\microchip\4x4w7segs\main.c
7A7 text1 CODE >100:D:\microchip\4x4w7segs\main.c
7A8 text1 CODE >101:D:\microchip\4x4w7segs\main.c
7A9 text1 CODE >102:D:\microchip\4x4w7segs\main.c
7AA text1 CODE >103:D:\microchip\4x4w7segs\main.c
7AB text1 CODE >104:D:\microchip\4x4w7segs\main.c
7AC text1 CODE >105:D:\microchip\4x4w7segs\main.c
7B0 text1 CODE >107:D:\microchip\4x4w7segs\main.c
7B2 text1 CODE >109:D:\microchip\4x4w7segs\main.c
7B4 text1 CODE >111:D:\microchip\4x4w7segs\main.c
7B6 text1 CODE >113:D:\microchip\4x4w7segs\main.c
7B8 text1 CODE >115:D:\microchip\4x4w7segs\main.c
7BA text1 CODE >117:D:\microchip\4x4w7segs\main.c
7BC text1 CODE >119:D:\microchip\4x4w7segs\main.c
7BE text1 CODE >121:D:\microchip\4x4w7segs\main.c
7BF text1 CODE >122:D:\microchip\4x4w7segs\main.c
7C0 text1 CODE >123:D:\microchip\4x4w7segs\main.c
7C1 text1 CODE >124:D:\microchip\4x4w7segs\main.c
7C2 text1 CODE >125:D:\microchip\4x4w7segs\main.c
7C3 text1 CODE >126:D:\microchip\4x4w7segs\main.c
7C4 text1 CODE >127:D:\microchip\4x4w7segs\main.c
7C5 text1 CODE >128:D:\microchip\4x4w7segs\main.c
7C6 text1 CODE >129:D:\microchip\4x4w7segs\main.c
7CA text1 CODE >131:D:\microchip\4x4w7segs\main.c
7CC text1 CODE >133:D:\microchip\4x4w7segs\main.c
7CE text1 CODE >135:D:\microchip\4x4w7segs\main.c
7D0 text1 CODE >137:D:\microchip\4x4w7segs\main.c
7D2 text1 CODE >139:D:\microchip\4x4w7segs\main.c
7D4 text1 CODE >141:D:\microchip\4x4w7segs\main.c
7D6 text1 CODE >143:D:\microchip\4x4w7segs\main.c
7D8 text1 CODE >146:D:\microchip\4x4w7segs\main.c
7E1 text1 CODE >147:D:\microchip\4x4w7segs\main.c
7EC text1 CODE >148:D:\microchip\4x4w7segs\main.c
7F4 text1 CODE >149:D:\microchip\4x4w7segs\main.c
759 maintext CODE >153:D:\microchip\4x4w7segs\main.c
759 maintext CODE >156:D:\microchip\4x4w7segs\main.c
75C maintext CODE >157:D:\microchip\4x4w7segs\main.c
75E maintext CODE >161:D:\microchip\4x4w7segs\main.c
766 maintext CODE >162:D:\microchip\4x4w7segs\main.c
76D maintext CODE >159:D:\microchip\4x4w7segs\main.c
$startup.obj
0 end_init CODE >72:D:\microchip\4x4w7segs\startup.as
0 init CODE >69:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >39:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >40:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >41:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >42:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >43:D:\microchip\4x4w7segs\startup.as
0 functab ENTRY >44:D:\microchip\4x4w7segs\startup.as
0 reset_vec CODE >63:D:\microchip\4x4w7segs\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
_i 24 0 BANK0 1 dataBANK0 4x4w7segs.obj
___latbits 1 0 ABS 0 - 4x4w7segs.obj
__LdataBANK0 0 0 ABS 0 dataBANK0 -
__Hspace_0 2008 0 ABS 0 - -
__Hspace_1 26 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__HidataBANK0 0 0 ABS 0 idataBANK0 -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 0 0 ABS 0 strings -
___sp 0 0 STACK 2 stack startup.obj
_main EB2 0 CODE 0 maintext 4x4w7segs.obj
btemp 7E 0 ABS 0 - 4x4w7segs.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - 4x4w7segs.obj
__LidataBANK0 0 0 ABS 0 idataBANK0 -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
wtemp0 7E 0 ABS 0 - 4x4w7segs.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Lmaintext 0 0 ABS 0 maintext -
start_initialization FEC 0 CODE 0 cinit 4x4w7segs.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 4x4w7segs.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 BANK2 1 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__stringbase E 0 STRING 0 strings 4x4w7segs.obj
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 4010 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 BANK2 1 bank2 -
__Lbank3 0 0 BANK3 1 bank3 -
__Lcinit FEC 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
_LED 10 0 STRING 0 strings 4x4w7segs.obj
_RB0 30 0 ABS 0 - 4x4w7segs.obj
_RB1 31 0 ABS 0 - 4x4w7segs.obj
_RB2 32 0 ABS 0 - 4x4w7segs.obj
_RB3 33 0 ABS 0 - 4x4w7segs.obj
_RB4 34 0 ABS 0 - 4x4w7segs.obj
_RB5 35 0 ABS 0 - 4x4w7segs.obj
_RB6 36 0 ABS 0 - 4x4w7segs.obj
_RB7 37 0 ABS 0 - 4x4w7segs.obj
__S0 2008 0 ABS 0 - -
__S1 26 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_key EDC 0 CODE 0 text1 4x4w7segs.obj
__end_of_LED 3C 0 STRING 0 strings 4x4w7segs.obj
__end_of_key FEC 0 CODE 0 text1 4x4w7segs.obj
__Lintentry 0 0 CODE 0 intentry -
__stringtab 4 0 STRING 0 strings 4x4w7segs.obj
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pdataBANK0 24 0 BANK0 1 dataBANK0 4x4w7segs.obj
__pmaintext EB2 0 CODE 0 maintext 4x4w7segs.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 400E 0 CONFIG 0 config -
__CFG_WDTE$OFF 0 0 ABS 0 - 4x4w7segs.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__end_of__stringtab 10 0 STRING 0 strings 4x4w7segs.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 0 0 CODE 0 end_init -
end_of_initialization FFA 0 CODE 0 cinit 4x4w7segs.obj
__Hintentry 0 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
__ptext1 EDC 0 CODE 0 text1 4x4w7segs.obj
main@keybuf 23 0 BANK0 1 cstackBANK0 4x4w7segs.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__CFG_FOSC$XT 0 0 ABS 0 - 4x4w7segs.obj
__end_of__initialization FFA 0 CODE 0 cinit 4x4w7segs.obj
__Lfunctab 0 0 ENTRY 0 functab -
__pidataBANK0 EAE 0 CODE 0 idataBANK0 4x4w7segs.obj
__Lclrtext 0 0 ABS 0 clrtext -
__Hend_init 4 0 CODE 0 end_init -
__end_of_main EDC 0 CODE 0 maintext 4x4w7segs.obj
_PORTD 8 0 ABS 0 - 4x4w7segs.obj
_TRISB 86 0 ABS 0 - 4x4w7segs.obj
_TRISD 88 0 ABS 0 - 4x4w7segs.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
__size_of_key 0 0 ABS 0 - 4x4w7segs.obj
__HdataBANK0 0 0 ABS 0 dataBANK0 -
__initialization FEC 0 CODE 0 cinit 4x4w7segs.obj
__pstrings 4 0 STRING 0 strings 4x4w7segs.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7F6 FEC A 2
text1 0 76E EDC 88 2
maintext 0 759 EB2 15 2
cstackBANK0 1 20 20 6 1
reset_vec 0 0 0 2 2
idataBANK0 0 757 EAE 2 2
strings 0 2 4 1C 2
config 0 2007 400E 1 2
